# coding: utf-8

#  Copyright 2022 VMware, Inc.
#  SPDX-License-Identifier: Apache-2.0

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.credential_definition_fields import CredentialDefinitionFields  # noqa: F401,E501
from swagger_server import util


class CredentialDefinition(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, key: str=None, label: str=None, fields: List[CredentialDefinitionFields]=None):  # noqa: E501
        """CredentialDefinition - a model defined in Swagger

        :param key: The key of this CredentialDefinition.  # noqa: E501
        :type key: str
        :param label: The label of this CredentialDefinition.  # noqa: E501
        :type label: str
        :param fields: The fields of this CredentialDefinition.  # noqa: E501
        :type fields: List[CredentialDefinitionFields]
        """
        self.swagger_types = {
            'key': str,
            'label': str,
            'fields': List[CredentialDefinitionFields]
        }

        self.attribute_map = {
            'key': 'key',
            'label': 'label',
            'fields': 'fields'
        }
        self._key = key
        self._label = label
        self._fields = fields

    @classmethod
    def from_dict(cls, dikt) -> 'CredentialDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CredentialDefinition of this CredentialDefinition.  # noqa: E501
        :rtype: CredentialDefinition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self) -> str:
        """Gets the key of this CredentialDefinition.


        :return: The key of this CredentialDefinition.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key: str):
        """Sets the key of this CredentialDefinition.


        :param key: The key of this CredentialDefinition.
        :type key: str
        """

        self._key = key

    @property
    def label(self) -> str:
        """Gets the label of this CredentialDefinition.


        :return: The label of this CredentialDefinition.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label: str):
        """Sets the label of this CredentialDefinition.


        :param label: The label of this CredentialDefinition.
        :type label: str
        """

        self._label = label

    @property
    def fields(self) -> List[CredentialDefinitionFields]:
        """Gets the fields of this CredentialDefinition.


        :return: The fields of this CredentialDefinition.
        :rtype: List[CredentialDefinitionFields]
        """
        return self._fields

    @fields.setter
    def fields(self, fields: List[CredentialDefinitionFields]):
        """Sets the fields of this CredentialDefinition.


        :param fields: The fields of this CredentialDefinition.
        :type fields: List[CredentialDefinitionFields]
        """

        self._fields = fields
