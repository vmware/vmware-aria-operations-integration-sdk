# coding: utf-8

#  Copyright 2022 VMware, Inc.
#  SPDX-License-Identifier: Apache-2.0

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CredentialField(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, key: str=None, value: str=None, is_password: bool=False):  # noqa: E501
        """CredentialField - a model defined in Swagger

        :param key: The key of this CredentialField.  # noqa: E501
        :type key: str
        :param value: The value of this CredentialField.  # noqa: E501
        :type value: str
        :param is_password: The is_password of this CredentialField.  # noqa: E501
        :type is_password: bool
        """
        self.swagger_types = {
            'key': str,
            'value': str,
            'is_password': bool
        }

        self.attribute_map = {
            'key': 'key',
            'value': 'value',
            'is_password': 'isPassword'
        }
        self._key = key
        self._value = value
        self._is_password = is_password

    @classmethod
    def from_dict(cls, dikt) -> 'CredentialField':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CredentialField of this CredentialField.  # noqa: E501
        :rtype: CredentialField
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self) -> str:
        """Gets the key of this CredentialField.

        Credential field key. In describe.xml file, the \"key\" attribute corresponds to this field.  # noqa: E501

        :return: The key of this CredentialField.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key: str):
        """Sets the key of this CredentialField.

        Credential field key. In describe.xml file, the \"key\" attribute corresponds to this field.  # noqa: E501

        :param key: The key of this CredentialField.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")  # noqa: E501

        self._key = key

    @property
    def value(self) -> str:
        """Gets the value of this CredentialField.

        Value of the credential field. This field is populated  on adapter instance creation.  # noqa: E501

        :return: The value of this CredentialField.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this CredentialField.

        Value of the credential field. This field is populated  on adapter instance creation.  # noqa: E501

        :param value: The value of this CredentialField.
        :type value: str
        """

        self._value = value

    @property
    def is_password(self) -> bool:
        """Gets the is_password of this CredentialField.

        Flag to indicate whether this is a password field.  # noqa: E501

        :return: The is_password of this CredentialField.
        :rtype: bool
        """
        return self._is_password

    @is_password.setter
    def is_password(self, is_password: bool):
        """Sets the is_password of this CredentialField.

        Flag to indicate whether this is a password field.  # noqa: E501

        :param is_password: The is_password of this CredentialField.
        :type is_password: bool
        """

        self._is_password = is_password
