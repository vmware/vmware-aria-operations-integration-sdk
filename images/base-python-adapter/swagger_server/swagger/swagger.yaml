openapi: 3.0.0
info:
  title: Adapter API
  description: The API contract is defined using a standard OpenAPI specification to simplify adapter development.
  contact:
    name: VMware, Inc
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.txt
  version: 1.0.0
servers:
- url: http://localhost:8080
paths:
  /apiVersion:
    get:
      summary: API Version
      description: Get API Version
      operationId: api_version
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
      x-openapi-router-controller: swagger_server.controllers.controller
  /test:
    post:
      summary: Connection Test
      description: Trigger a connection test
      operationId: test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdapterConfig'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult'
        '400':
          description: Bad Request
      x-openapi-router-controller: swagger_server.controllers.controller
  /collect:
    post:
      summary: Data Collection
      description: Do data collection
      operationId: collect
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdapterConfig'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectResult'
      x-openapi-router-controller: swagger_server.controllers.controller
  /endpointURLs:
    post:
      summary: Retrieve endpoint URLs
      description: This should return a list of properly formed endpoint URL(s) (https://ip address) this adapter instance is expected to communicate with. List of URLs will be used for taking advantage of the VMware Aria Operations Manager certificate trust system. If the list is empty this means adapter will handle certificates manually.
      operationId: get_endpoint_urls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdapterConfig'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResults'
      x-openapi-router-controller: swagger_server.controllers.controller
  /adapterDefinition:
    get:
      summary: Retrieve the data model for collection
      description: Get Adapter Definition
      operationId: definition
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdapterDefinition'
        '204':
          description: No Adapter Definition returned
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.controller
components:
  schemas:
    ObjectKey:
      title: ObjectKey
      required:
      - adapterKind
      - name
      - objectKind
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the object this key represents
        adapterKind:
          minLength: 1
          type: string
          description: Adapter kind key this key represents.
        objectKind:
          minLength: 1
          type: string
          description: The object kind key this key represents.
        identifiers:
          type: array
          description: Collection of identifiers for this key. Identifiers are case insensitive. No two identifiers with the same key can exist for the same resource.
          items:
            $ref: '#/components/schemas/Identifier'
      description: |-
        Represents a key to uniquely identify a object in the system. A key's
        uniqueness depends on its object kind, adapter kind, and either the
        object name or additional "uniqueness" identifiers.

        See {Identifier} for information about object identifiers.

        A object key includes the object name as part of the key's uniqueness if
        it has no identifiers marked as part of uniqueness; otherwise, it includes
        the identifiers marked as part of uniqueness instead of the object name.

        All components used to determine uniqueness are compared in a case-insensitive way.

        The following shows how to add two objects, by objectKey, to a discovery
        result.  The first is created with no identifiers.  The second is created
        with two identifiers, one of which plays a part in uniquely identifying the
        object and the other which is for informational purposes only.
      example:
        objectKind: objectKind
        adapterKind: adapterKind
        identifiers:
        - isPartOfUniqueness: false
          value: value
          key: key
        - isPartOfUniqueness: false
          value: value
          key: key
        name: name
    Identifier:
      title: Identifier
      required:
      - key
      type: object
      properties:
        key:
          minLength: 1
          type: string
          description: Key for the object identifier. For a object kind, identifier keys are unique. In describe.xml file, the attribute "key" corresponds to this field. This is a case-insensitive field and can not be empty.
        value:
          type: string
          description: Value of the object identifier. This is a case-insensitive field
        isPartOfUniqueness:
          type: boolean
          description: Flag to indicate whether the identifier should be considered for object's uniqueness. If a object has multiple identifiers that are part of uniqueness, there can be only one combination of values of those identifiers in VMware Aria Operations.
          default: false
      description: "Stores the adapter object's identifier configuration.\nAn identifier can either be an active identifier or an informational identifier.\nAll active identifiers have the flag \"isPartOfUniqueness\" set to true, \nwhile all informational identifiers have this flag set to false. In the product,\nthere cannot be more than one object with the same values for all active identifiers.\nThis class contains all information about the object identifier."
      example:
        isPartOfUniqueness: false
        value: value
        key: key
    ObjectData:
      title: ObjectData
      required:
      - key
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ObjectKey'
        metrics:
          type: array
          description: Collection of metrics.
          items:
            $ref: '#/components/schemas/MetricData'
        properties:
          type: array
          description: Collection of properties.
          items:
            $ref: '#/components/schemas/PropertyData'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      description: Stores object configuration information. Collection of metrics/properties for the object and the object key for current object.
      example:
        metrics:
        - numberValue: 0.8008281904610115
          key: key
          timestamp: 6
        - numberValue: 0.8008281904610115
          key: key
          timestamp: 6
        key:
          objectKind: objectKind
          adapterKind: adapterKind
          identifiers:
          - isPartOfUniqueness: false
            value: value
            key: key
          - isPartOfUniqueness: false
            value: value
            key: key
          name: name
        properties:
        - stringValue: stringValue
          numberValue: 1.4658129805029452
          key: key
          timestamp: 5
        - stringValue: stringValue
          numberValue: 1.4658129805029452
          key: key
          timestamp: 5
        events:
        - cancelWaitCycle: 2
          updateDate: 7
          cancelDate: 9
          watchWaitCycle: 3
          criticality: 2
          message: message
          autoCancel: false
          faultKey: faultKey
          startDate: 2
        - cancelWaitCycle: 2
          updateDate: 7
          cancelDate: 9
          watchWaitCycle: 3
          criticality: 2
          message: message
          autoCancel: false
          faultKey: faultKey
          startDate: 2
    MetricData:
      title: MetricData
      required:
      - key
      type: object
      properties:
        key:
          type: string
          description: |-
            Key represents a hierarchical structure for an individual
            metric. The formation of the metric key is an important part of designing a
            data feed. Well-formed metric keys will lead to better usability, performance
            and visualization of analytics results, such as root cause analysis.

            The base concepts are as follows:<br>
            A metric key can consist of any number of hierarchical groups. Each hierarchical group can contain
            instances. The last item in the hierarchy is assumed to be the name of the
            metric. The hierarchy without instance names represents an attribute that can
            be collected. If there are no instances, then a metric key and an attribute are one and the same.
        numberValue:
          type: number
          description: Current double value.
          format: double
        timestamp:
          type: integer
          description: Timestamp of the data.
          format: int64
          default: -1
      description: Represents a single data for a given metric, where an data is a time-stamp and a value;
      example:
        numberValue: 0.8008281904610115
        key: key
        timestamp: 6
    PropertyData:
      title: PropertyData
      required:
      - key
      type: object
      properties:
        key:
          type: string
          description: |-
            Key represents a hierarchical structure for an individual
            metric. The formation of the metric key is an important part of designing a
            data feed. Well-formed metric keys will lead to better usability, performance
            and visualization of analytics results, such as root cause analysis.

            The base concepts are as follows:<br>
            A metric key can consist of any number of hierarchical groups. Each hierarchical group can contain
            instances. The last item in the hierarchy is assumed to be the name of the
            metric. The hierarchy without instance names represents an attribute that can
            be collected. If there are no instances, then a metric key and an attribute are one and the same.
        stringValue:
          type: string
          description: Current string value
        numberValue:
          type: number
          description: Current double value.
          format: double
        timestamp:
          type: integer
          description: Timestamp of the data.
          format: int64
          default: -1
      description: Represents a single data for a given property, where the value can be numeric or string type.
      example:
        stringValue: stringValue
        numberValue: 1.4658129805029452
        key: key
        timestamp: 5
    CollectResult:
      title: CollectResult
      type: object
      properties:
        result:
          type: array
          description: Collection of collected objects with metrics and properties.
          items:
            $ref: '#/components/schemas/ObjectData'
        relationships:
          type: array
          description: Collection of objects relationships with parent to children structure.
          items:
            $ref: '#/components/schemas/ObjectRelationship'
        notExistingObjects:
          type: array
          description: Collection of not existing objects.
          items:
            $ref: '#/components/schemas/ObjectKey'
        errorMessage:
          type: string
      description: Result of the collection process. Every collect result has object data collection with metrics/properties and the relationship of all objects.
      example:
        result:
        - metrics:
          - numberValue: 0.8008281904610115
            key: key
            timestamp: 6
          - numberValue: 0.8008281904610115
            key: key
            timestamp: 6
          key:
            objectKind: objectKind
            adapterKind: adapterKind
            identifiers:
            - isPartOfUniqueness: false
              value: value
              key: key
            - isPartOfUniqueness: false
              value: value
              key: key
            name: name
          properties:
          - stringValue: stringValue
            numberValue: 1.4658129805029452
            key: key
            timestamp: 5
          - stringValue: stringValue
            numberValue: 1.4658129805029452
            key: key
            timestamp: 5
          events:
          - cancelWaitCycle: 2
            updateDate: 7
            cancelDate: 9
            watchWaitCycle: 3
            criticality: 2
            message: message
            autoCancel: false
            faultKey: faultKey
            startDate: 2
          - cancelWaitCycle: 2
            updateDate: 7
            cancelDate: 9
            watchWaitCycle: 3
            criticality: 2
            message: message
            autoCancel: false
            faultKey: faultKey
            startDate: 2
        - metrics:
          - numberValue: 0.8008281904610115
            key: key
            timestamp: 6
          - numberValue: 0.8008281904610115
            key: key
            timestamp: 6
          key:
            objectKind: objectKind
            adapterKind: adapterKind
            identifiers:
            - isPartOfUniqueness: false
              value: value
              key: key
            - isPartOfUniqueness: false
              value: value
              key: key
            name: name
          properties:
          - stringValue: stringValue
            numberValue: 1.4658129805029452
            key: key
            timestamp: 5
          - stringValue: stringValue
            numberValue: 1.4658129805029452
            key: key
            timestamp: 5
          events:
          - cancelWaitCycle: 2
            updateDate: 7
            cancelDate: 9
            watchWaitCycle: 3
            criticality: 2
            message: message
            autoCancel: false
            faultKey: faultKey
            startDate: 2
          - cancelWaitCycle: 2
            updateDate: 7
            cancelDate: 9
            watchWaitCycle: 3
            criticality: 2
            message: message
            autoCancel: false
            faultKey: faultKey
            startDate: 2
        relationships:
        - add: true
          parent:
          children:
          - 
          - 
          clearFirst: true
        - add: true
          parent:
          children:
          - 
          - 
          clearFirst: true
        notExistingObjects:
        - 
        - 
        errorMessage: errorMessage
    ObjectRelationship:
      title: ObjectRelationship
      required:
      - parent
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/ObjectKey'
        children:
          type: array
          description: Collection of children for the current parent.
          items:
            $ref: '#/components/schemas/ObjectKey'
        add:
          type: boolean
          description: If the value is true, then this relationship will be added to VMware Aria Operations Manager, if false, this relationship will be removed from VMware Aria Operations Manager.
          default: true
        clearFirst:
          type: boolean
          description: If the value is true all children will be removed from the parent before adding this list.
          default: true
      description: Represents a single parent to many children relationship.
      example:
        add: true
        parent:
        children:
        - 
        - 
        clearFirst: true
    TestResult:
      title: TestResult
      type: object
      properties:
        errorMessage:
          type: string
          description: Contains the error message if the test connection failed.
      description: Represents the configuration validation result. Result contains error message if validation is failed.
      example:
        errorMessage: errorMessage
    AdapterConfig:
      title: AdapterConfig
      minProperties: 0
      required:
      - adapterKey
      type: object
      properties:
        adapterKey:
          $ref: '#/components/schemas/ObjectKey'
        credentialConfig:
          $ref: '#/components/schemas/CredentialConfig'
        clusterConnectionInfo:
          $ref: '#/components/schemas/ClusterConnectionInfo'
        certificateConfig:
          $ref: '#/components/schemas/CertificateConfig'
        collectionNumber:
          minimum: 0
          type: integer
          format: int32
        collectionWindow:
          $ref: '#/components/schemas/CollectionWindow'
      description: |-
        Is designed for transferring adapter instance configuration from the Collector to
        Adapter, containing all necessary information about connection parameters, credentials.
    CredentialConfig:
      title: CredentialConfig
      required:
      - credentialFields
      - credentialKey
      type: object
      properties:
        credentialKey:
          minLength: 1
          type: string
          description: Credential configuration key. In describe.xml file, the "key" attribute corresponds to this field.
        credentialFields:
          minItems: 1
          type: array
          description: List of all credential field configurations. In describe.xml, the element "CredentialField" inside "CredentialKind" corresponds to individual elements in this list.
          items:
            $ref: '#/components/schemas/CredentialField'
      description: "Represents the adapter's configured credential object. \nContains all information about the credentials entered when the adapter instance is created."
    CredentialField:
      title: CredentialField
      required:
      - key
      type: object
      properties:
        key:
          minLength: 1
          type: string
          description: Credential field key. In describe.xml file, the "key" attribute corresponds to this field.
        value:
          type: string
          description: Value of the credential field. This field is populated  on adapter instance creation.
          format: password
        isPassword:
          type: boolean
          description: Flag to indicate whether this is a password field.
          default: false
      description: |-
        Represents adapter's credential configuration field.
        This class contains all information about the credential's field entered when the adapter instance is created.
    ClusterConnectionInfo:
      title: ClusterConnectionInfo
      required:
      - hostName
      - userName
      type: object
      properties:
        userName:
          minLength: 1
          type: string
          description: Represents the user name in the credential.
        password:
          type: string
          description: Represents the password in the credential.
          format: password
        hostName:
          type: string
          description: Host name for connection to the VMware Aria Operations Cluster
      description: Represents the connection info to be used by adapter to communicate with the VMware Aria Operations Suite API.
    Certificate:
      title: Certificate
      required:
      - certPemString
      type: object
      properties:
        certPemString:
          type: string
        isInvalidHostnameAccepted:
          type: boolean
          description: "In case if the hostname verification fails and isInvalidHostnameAccepted is true \nAdapter should do the verification by comparing the certificates from the endpoints with the certificates received from the Collector. \nFor example the comparison can be done by thumbprint."
          default: false
        isExpiredCertificateAccepted:
          type: boolean
          description: In case if the connection fails because of certificate expiration and isExpiredCertificateAccepted is true then the Adapter should ignore that failure and continue the connection.
          default: false
      description: Represents the adapter's trusted certificate object. This class contains all information about the certificates trusted by user from UI when the adapter instance is created.
    CertificateConfig:
      title: CertificateConfig
      type: object
      properties:
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
      description: Represents the adapter's trusted certificates.
    Event:
      title: Event
      required:
      - message
      type: object
      properties:
        criticality:
          maximum: 5
          minimum: 0
          type: integer
          format: int32
          default: 0
        message:
          type: string
        faultKey:
          type: string
        autoCancel:
          type: boolean
          default: false
        startDate:
          type: integer
          format: int64
        updateDate:
          type: integer
          format: int64
        cancelDate:
          type: integer
          format: int64
        watchWaitCycle:
          type: integer
          format: int32
          default: 1
        cancelWaitCycle:
          type: integer
          format: int32
          default: 3
      example:
        cancelWaitCycle: 2
        updateDate: 7
        cancelDate: 9
        watchWaitCycle: 3
        criticality: 2
        message: message
        autoCancel: false
        faultKey: faultKey
        startDate: 2
    ApiVersion:
      title: ApiVersion
      required:
      - maintenance
      - major
      - minor
      type: object
      properties:
        major:
          maximum: 1
          minimum: 1
          exclusiveMinimum: false
          type: integer
          readOnly: true
          default: 1
        minor:
          maximum: 0
          minimum: 0
          type: integer
          readOnly: true
          default: 0
        maintenance:
          maximum: 0
          minimum: 0
          type: integer
          readOnly: true
          default: 0
      description: API Version
      example:
        major: 1
        minor: 0
        maintenance: 0
    EndpointResults:
      title: EndpointResults
      type: object
      properties:
        endpointUrls:
          type: array
          description: Collection of endpoint URLs
          items:
            type: string
      description: Endpoint URLs collection
      example:
        endpointUrls:
        - endpointUrls
        - endpointUrls
    AttributeDefinition:
      title: Attribute Definition
      required:
      - dashboard_order
      - data_type
      - is_discrete
      - is_impact
      - is_key_attribute
      - is_kpi
      - is_property
      - is_rate
      - key
      - label
      type: object
      properties:
        key:
          type: string
        label:
          type: string
        unit:
          type: string
          nullable: true
        is_rate:
          type: boolean
          default: false
        is_discrete:
          type: boolean
          default: false
        is_kpi:
          type: boolean
          default: false
        is_impact:
          type: boolean
          default: false
        is_key_attribute:
          type: boolean
          default: false
        dashboard_order:
          type: integer
          format: int32
        data_type:
          type: string
        is_property:
          type: boolean
      description: Defines an attribute's metadata
      example:
        is_kpi: false
        unit: unit
        is_impact: false
        is_property: true
        is_discrete: false
        dashboard_order: 5
        data_type: data_type
        is_key_attribute: false
        label: label
        key: key
        is_rate: false
    CredentialDefinition:
      title: Credential Definition
      type: object
      properties:
        key:
          type: string
        label:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/CredentialDefinition_fields'
      description: Defines what credential fields are present on a given credential type
      example:
        label: label
        fields:
        - password: false
          default: default
          enum_values:
          - enum_values
          - enum_values
          display_order: 2
          label: label
          type: string
          key: key
          required: true
          enum: false
        - password: false
          default: default
          enum_values:
          - enum_values
          - enum_values
          display_order: 2
          label: label
          type: string
          key: key
          required: true
          enum: false
        key: key
    IdentifierDefinition:
      title: Identifier Definition
      required:
      - display_order
      - enum
      - ident_type
      - key
      - label
      - required
      - type
      type: object
      properties:
        key:
          type: string
        label:
          type: string
        description:
          type: string
        required:
          type: boolean
          default: true
        ident_type:
          type: integer
          format: int32
          default: 1
        enum:
          type: boolean
          default: false
        enum_values:
          type: array
          items:
            type: string
        display_order:
          type: integer
          format: int32
        type:
          type: string
        length:
          type: integer
          nullable: true
        default:
          type: string
          nullable: true
      description: Defines what identifiers are present on a given object type
      example:
        default: default
        enum_values:
        - enum_values
        - enum_values
        display_order: 1
        length: 5
        description: description
        label: label
        ident_type: 6
        type: type
        key: key
        required: true
        enum: false
    GroupDefinition:
      title: Group Definition
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeDefinition'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupDefinition'
      description: Definition of a group of attributes and subgroups
      example:
        groups:
        - 
        - 
        attributes:
        - 
        - 
    ObjectDefinition:
      title: Object Definition
      required:
      - groups
      - identifiers
      - key
      - label
      type: object
      properties:
        key:
          type: string
        label:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/IdentifierDefinition'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeDefinition'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupDefinition'
      description: Definition of an object type
      example:
        identifiers:
        - default: default
          enum_values:
          - enum_values
          - enum_values
          display_order: 1
          length: 5
          description: description
          label: label
          ident_type: 6
          type: type
          key: key
          required: true
          enum: false
        - default: default
          enum_values:
          - enum_values
          - enum_values
          display_order: 1
          length: 5
          description: description
          label: label
          ident_type: 6
          type: type
          key: key
          required: true
          enum: false
        groups:
        - groups:
          - 
          - 
          attributes:
          - 
          - 
        - groups:
          - 
          - 
          attributes:
          - 
          - 
        attributes:
        - is_kpi: false
          unit: unit
          is_impact: false
          is_property: true
          is_discrete: false
          dashboard_order: 5
          data_type: data_type
          is_key_attribute: false
          label: label
          key: key
          is_rate: false
        - is_kpi: false
          unit: unit
          is_impact: false
          is_property: true
          is_discrete: false
          dashboard_order: 5
          data_type: data_type
          is_key_attribute: false
          label: label
          key: key
          is_rate: false
        label: label
        key: key
    AdapterDefinition:
      title: Adapter Definition
      required:
      - adapter_instance
      - adapter_key
      - adapter_label
      - credential_types
      - describe_version
      - object_types
      type: object
      properties:
        adapter_key:
          type: string
        adapter_label:
          type: string
        describe_version:
          type: integer
          format: int32
        adapter_instance:
          $ref: '#/components/schemas/ObjectDefinition'
        credential_types:
          type: array
          items:
            $ref: '#/components/schemas/CredentialDefinition'
        object_types:
          type: array
          items:
            $ref: '#/components/schemas/ObjectDefinition'
      description: Definition of the object model returned in CollectResult
      example:
        object_types:
        - 
        - 
        adapter_instance:
          identifiers:
          - default: default
            enum_values:
            - enum_values
            - enum_values
            display_order: 1
            length: 5
            description: description
            label: label
            ident_type: 6
            type: type
            key: key
            required: true
            enum: false
          - default: default
            enum_values:
            - enum_values
            - enum_values
            display_order: 1
            length: 5
            description: description
            label: label
            ident_type: 6
            type: type
            key: key
            required: true
            enum: false
          groups:
          - groups:
            - 
            - 
            attributes:
            - 
            - 
          - groups:
            - 
            - 
            attributes:
            - 
            - 
          attributes:
          - is_kpi: false
            unit: unit
            is_impact: false
            is_property: true
            is_discrete: false
            dashboard_order: 5
            data_type: data_type
            is_key_attribute: false
            label: label
            key: key
            is_rate: false
          - is_kpi: false
            unit: unit
            is_impact: false
            is_property: true
            is_discrete: false
            dashboard_order: 5
            data_type: data_type
            is_key_attribute: false
            label: label
            key: key
            is_rate: false
          label: label
          key: key
        adapter_key: adapter_key
        describe_version: 0
        adapter_label: adapter_label
        credential_types:
        - label: label
          fields:
          - password: false
            default: default
            enum_values:
            - enum_values
            - enum_values
            display_order: 2
            label: label
            type: string
            key: key
            required: true
            enum: false
          - password: false
            default: default
            enum_values:
            - enum_values
            - enum_values
            display_order: 2
            label: label
            type: string
            key: key
            required: true
            enum: false
          key: key
        - label: label
          fields:
          - password: false
            default: default
            enum_values:
            - enum_values
            - enum_values
            display_order: 2
            label: label
            type: string
            key: key
            required: true
            enum: false
          - password: false
            default: default
            enum_values:
            - enum_values
            - enum_values
            display_order: 2
            label: label
            type: string
            key: key
            required: true
            enum: false
          key: key
    CollectionWindow:
      title: CollectionWindow
      minProperties: 2
      type: object
      properties:
        startTime:
          minimum: 0
          type: number
        endTime:
          minimum: 0
          type: number
    CredentialDefinition_fields:
      required:
      - display_order
      - enum
      - key
      - label
      - password
      - required
      - type
      type: object
      properties:
        key:
          type: string
        label:
          type: string
        required:
          type: boolean
          default: true
        password:
          type: boolean
          default: false
        enum:
          type: boolean
          default: false
        enum_values:
          type: array
          items:
            type: string
        default:
          type: string
          nullable: true
        display_order:
          type: integer
          format: int32
        type:
          type: string
          default: string
      example:
        password: false
        default: default
        enum_values:
        - enum_values
        - enum_values
        display_order: 2
        label: label
        type: string
        key: key
        required: true
        enum: false
  securitySchemes: {}
  links: {}
  callbacks: {}

