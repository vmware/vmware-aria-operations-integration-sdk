<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="xs3p.xsl"?>
<!--
  ~ Copyright 2022 VMware, Inc.
  ~ SPDX-License-Identifier: Apache-2.0
  -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
	targetNamespace="http://schemas.vmware.com/vcops/schema"
	xmlns:describe="http://schemas.vmware.com/vcops/schema" version="6.0.0" >
	<xs:element name="AdapterKind" type="describe:AdapterKindType"/>

	<xs:complexType name="AdapterKindType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				The top level element for any templates describe. Defines the templates kind key,
				version and other templates level attributes.
				Every templates must have a single AdapterKind entry in the describe that has a key
				matching the KINDKEY property in the adapter.properties file
			</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="ResourceKinds" type="describe:ResourceKindsType"/>
			<xs:element name="Names" type="describe:NamesType" minOccurs="0"/>
			<xs:element name="CredentialKinds" type="describe:CredentialKindsType" minOccurs="0"/>
			<xs:element name="Discoveries" type="describe:DiscoveriesType" minOccurs="0"/>
			<xs:element name="Methods" type="describe:MethodsType" minOccurs="0"/>
			<xs:element name="Actions" type="describe:ActionsType" minOccurs="0"/>
			<xs:element name="Recommendations" type="describe:RecommendationsType" minOccurs="0"/>
			<xs:element name="CapacityDefinitions" type="describe:CapacityDefinitionsType" minOccurs="0"/>
			<xs:element name="LaunchConfigurations" type="describe:LaunchConfigurationsType" minOccurs="0"/>
			<xs:element name="CustomGroupMetrics" type="describe:CustomGroupMetricsType" minOccurs="0"/>
			<xs:element name="SymptomDefinitions" type="describe:SymptomDefinitionsType" minOccurs="0"/>
			<xs:element name="AlertDefinitions" type="describe:AlertDefinitionsType" minOccurs="0"/>
			<xs:element name="TraversalSpecKinds" type="describe:TraversalSpecKindsType" minOccurs="0"/>
			<xs:element name="Faults" type="describe:FaultsType" minOccurs="0"/>
			<xs:element name="BasePolicyAnalysisSettings" type="describe:BasePolicyAnalysisSettingsType" minOccurs="0"/>
			<xs:element name="UnitDefinitions" type="describe:UnitDefinitionsType" minOccurs="0"/>
			<xs:element name="OOTBPolicies" type="describe:OOTBPoliciesType" minOccurs="0"/>
			<xs:element name="LicenseConfig" type="describe:LicenseConfigType" minOccurs="0"/>
		</xs:all>

		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Adapter kind key. A unique string that identifies the adapter.
					Only one templates with specified key can be present in the product.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the adapter. This number refers to one or more Name entries
					with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="version" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Version number of the adapter. Versions are used by the describe mechanism to determine
					if Describe Upgrade is required. If the version in the database is lower than the version
					returned by the templates describe the database will be updated according to the latest version.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="LicenseConfigType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Declares licensing configurations.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="type" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					This is license usage counting type.
					Supported value are: resource, metric.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="resource"/>
					<xs:enumeration value="metric"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="expression" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					This is the expression to identify the object for counting the license usage.
					If type is resource, the expression should point to the resource kind that number of such resource kind is the
					license usage count, i.e. AdapterKind:ResourceKind.
					If type is metric, the expression should point to the attribute that its value is the license usage count,
					i.e. AdapterKind:ResourceKind:ResourceGroup|ResourceAttribute.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="allowableResourceKinds" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A comma-separated list of resource kinds that the templates collects but do not count towards the licensing capacity.
					i.e. AdapterKind1:ResourceKind1,AdapterKind2:ResourceKind2
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="CredentialKindsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of CredentialKind declarations. Declares all kinds of credentials supported by given adapter.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CredentialKind" type="describe:CredentialKindType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CredentialKindType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Declares a collection of fields that can be used for identification and authentication.
				For example a simple credential kind can declare 2 fields: user name and password.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CredentialField" type="describe:CredentialFieldType" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Credential kind key, used to identify the credential type for a given adapter.
					Credential kind keys must be unique for a given templates
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the credential kind. This number refers to one or more Name entries
					with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CredentialFieldType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Credential field declaration, e.g. user name or password.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="enum" type="describe:enumType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="dispOrder" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the order of credential fields in the UI. Credential fields will be presented
					in ascending order.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Used to identify the credential field for a given credential kind.
					Credential field keys must be unique for a given credential kind.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the credential kind. This number refers to one or more Name entries
					with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="required" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					True if user entry is required for given credential field. Otherwise false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="password" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Declares the credential field as password field.
					As a result the value entered will not be displayed in clear text. Default="false".
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="passwordAlphabet" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Deprecated. Specifies the alphabet for automatically generated passwords.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="enum" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Declares the credential field as enumerated field. Default="false".
					All types except enum will be displayed as text box. Credential fields of enum type will be displayed
					as a combo box containing all enum values listed in the node value.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isAutomaticallyManaged" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Deprecated. Enables automatic password update logic.
					Applicable only for adapters that have password change ability on the source system.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="passwordLength" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Deprecated. Specifies the length for automatically generated passwords.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					expected type of credential field value.
					Used by UI to present it properly and validate user input.
					Supported values:string, integer, host, ip.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="string"/>
					<xs:enumeration value="integer"/>
					<xs:enumeration value="host"/>
					<xs:enumeration value="ip"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ResourceKindsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of ResourceKind declarations.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ResourceKind" type="describe:ResourceKindType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResourceKindType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Declares a resource kind.
				Resource kinds define types of resources,
				their specifics, identifiers, list of groups and attributes (metrics), etc.
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ResourceIdentifier" type="describe:ResourceIdentifierType"/>
			<xs:element name="ResourceAttribute" type="describe:ResourceAttributeType"/>
			<xs:element name="ResourceGroup" type="describe:ResourceGroupType"/>
			<xs:element name="ComputedMetrics" type="describe:ComputedMetricsType"/>
			<xs:element name="PowerState" type="describe:PowerStateType"/>
		</xs:choice>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					used to identify the resource kind for a given adapter.
					Resource kind keys must be unique for a given adapter.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the resource kind. This number refers to one or more Name entries
					with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="showTag" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Used to define the resource kind as a tag, that will be shown by default in the Tag panel or widget.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The type of the resoucre kind.
					If not specified the resource kind type is defaulted to "general". Supported types are:
					unspecified or 1 - general resource kind type
					7 - "Adapter Instance" resource kind
					4 - "Tag" resource kind
					All other types are reserved for future or internal use.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:integer">
					<xs:enumeration value="1"/>
					<xs:enumeration value="2"/>
					<xs:enumeration value="3"/>
					<xs:enumeration value="4"/>
					<xs:enumeration value="7"/>
					<xs:enumeration value="8"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="subType" use="optional">
					<xs:annotation>
				<xs:documentation xml:lang="en">
					The subtype of the resoucre kind.
					If not specified the resource kind subtype is defaulted to "general". Supported types are:
					unspecified or 1 - general resource kind subtype
					All other types are reserved for future or internal use.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:integer">
					<xs:enumeration value="1"/>
					<xs:enumeration value="2"/>
					<xs:enumeration value="3"/>
					<xs:enumeration value="4"/>
					<xs:enumeration value="5"/>
					<xs:enumeration value="6"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="credentialKind" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Comma-delimited list of credential kind keys that can be used to configure resources of given kind.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="capacityModel" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The value of CapacityDefinition's "key" attribute (if any).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="dynamic" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If the resource kind is specified in describe.xml, dynamic is false (unspecified).
					If the resource kind is created in the code, dynamic should be set to true (in the code).
					During a re-describe the dynamic ResourceKinds would not be synchronized,
					so all the underlying metrics and groups that exist in the database would remain unchanged,
					while non-dynamic ResourceKinds metrics that do not exist in the new describe document,
					would be removed.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ResourceIdentifierType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Declares a resource identifier type that will appear in the edit resource screen and can be
				used for resource identification as well as informational purposes.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="enum" type="describe:enumType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="dispOrder" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the order of identifiers in the UI. Identifiers will be presented in ascending order.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					used to identify the resource identifier type for a given resource kind.
					Resource kind identifier keys must be unique for a given resource kind.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the resource kind identifier. This number refers to one or more Name entries
					with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="required" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					true if user entry is required for given identifier. Otherwise false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Expected type of identifier value. Used by UI to present it properly and validate user input.
					Supported values:string, integer, host, ip.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="string"/>
					<xs:enumeration value="integer"/>
					<xs:enumeration value="host"/>
					<xs:enumeration value="ip"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="length" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Maximum length of identifier value. Used for UI validation
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="enum" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Declares the identifier field as enumerated field. Default="false".
					All types except enum will be displayed as text box.
					Identifiers of enum type will be displayed as a combo box containing all enum values
					listed in the node value.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="default" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Default value for the identifier.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="identType" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the identifier type.
					Supported values are "1" - part of uniqueness, "2" - not part of uniqueness.
					By default identifiers are part of uniqueness.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:integer">
					<xs:enumeration value="1"/>
					<xs:enumeration value="2"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ResourceGroupType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				ResourceGroup declares a metric group that belongs to the resource kind and defines
				the metric hierarchy. Groups can contain subgroups and metrics.
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ResourceAttribute" type="describe:ResourceAttributeType"/>
			<xs:element name="ResourceGroup" type="describe:ResourceGroupType"/>
		</xs:choice>
		<xs:attribute name="instanced" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Not supported in 6.0.0 version.
					Defines the group as instanced and allows user entry for instance names in the
					Attribute package editor UI.
					Note: groups do not have to define instanced="true" in order to be able to send instanced metrics.
					The only result of defining instanced="true" is having ability to list instance names in the UI.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Used to identify the resource attribute group type for a given resource kind.
					Resource kind attribute group keys must be unique for a given parent resource kind attribute group.
					Attribute groups defined at top level must have unique keys for given resource kind.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the resource group. This number refers to one or more Name entries
					with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="validation" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Regular expression for validating instance name entry while entering instance names
					in attribute package editor. If not specified no validation will be performed.
					Instance name validation is preformed with AND logic, so valid names must satisfy all
					conditions at the same time.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="instNameKey" type="xs:integer" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the instance field that will be shown in the UI.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="instType" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Type of instance value used for validation of user entry. Used by UI to validate user input.
					Supported values:string, integer, host, ip. If not specified no typovalidation will be performed
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="string"/>
					<xs:enumeration value="integer"/>
					<xs:enumeration value="host"/>
					<xs:enumeration value="ip"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="instanceRequired" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Not supported in 6.0.0 version.
					Defines if the instance entry is required. If true, no metric data will be collected for
					given group unless instance names are specifically entered. This is mostly useful when
					collecting data for all instances is not desireable. For example for the Process group
					where instance is the process name it is usually menaingful to collect metrics for only
					specific processes instead of all processes. In that case setting instanceRequired="true"
					will prevent from collecting all instances by default.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isInstanceResourceId" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If the instance name of this group is a Resource ID (the internal integer number that is assigned to a Resource),
					then if this attribute is set to true, instead of the Resource ID, the name of the Resource would be displayed in UI.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ComputedMetricsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of ComputedMetric declarations.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ComputedMetric" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Each ComputedMetric element defines a new metric computed based on existing metrics.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="key" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The computed metric's key.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="expression" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The computed metric's expression (computation formula).
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PowerStateType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				The power state of definition of a Resource.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PowerStateValue" maxOccurs="unbounded" minOccurs="2">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						The power state value element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="key" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The power state unique key.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="value" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The power state value (e.g. PowerOn or PowerOff.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="alias" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The Property Attribute this is aliased as Power State.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="DiscoveriesType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of Discovery declarations.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Discovery" type="describe:DiscoveryType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DiscoveryType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Declares discovery types supported by the adapter.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DiscoveryParam" type="describe:DiscoveryParamType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Used to identify the discovery type.
					Discovery keys must be unique for a given templates
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the discovery type. This number refers to one or more Name entries with
					matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="DiscoveryParamType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Discovery parameter declaration that defines an input field in the manual discovery
				screen allowing the user to enter necessary data. For example SSH discovery can have
				an IP_RANGE discovery parameter specifying the IP range that needs to be analyzed.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="enum" type="describe:enumType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="dispOrder" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the order of discovery parameters in the UI.
					Discovery parameters will be presented in ascending order.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="enum" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Declares the discovery parameter field as enumerated field. Default="false".
					All types except enum will be displayed as text box. Discovery parameters of
					enum type will be displayed as a combo box containing all enum values listed
					in the node value.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Used to identify the discovery parameter for a given discovery type.
					DiscoveryParam keys must be unique for a given Discovery declaration.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the discovery parameter. This number refers to one or more
					Name entries with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="password" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Declares the discovery parameter field as password field.
					As a result the value entered will not be displayed in clear text.
					Default="false".
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="required" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					true if user entry is required for given discovery parameter. Otherwise false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					defines the data type of the discovery parameter.
					Used by the UI to present it properly and validate user input.
					Supported values:string, integer, host, ip.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="string"/>
					<xs:enumeration value="integer"/>
					<xs:enumeration value="host"/>
					<xs:enumeration value="ip"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="default" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Default value of the discovery parameter. Default="".
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="regexp" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Regular expression to validate the field input.
					If isn’t specified, no validation is performed.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="NamesType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of Name (name) elements.
				Localized names can be externalized to resources property file.
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Name" type="describe:NameType"/>
			<xs:element name="name" type="describe:NameType"/>
		</xs:choice>
		<xs:attribute name="lang" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Language code (e.g. "en" for English)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="NameType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Localized name declaration that can be referred to from other declarations.
				Name key for a Name entry can be reused by multiple components, e.g. Multiple attributes having
				the same meaning that belong to different resource kinds can use the same Name declaration
				by specifying the same name_id value.
				Only one Name entry with a given key can be present in a Names declaration.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="key" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The name_id identifier for given Name entry. This value can be used as name_id value when
					referring to the localized name from other entity declarations. Name keys must be unique
					for given Names group.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="shortName" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Short localized name that will be displayed in UI. The string is case sensitive.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="enumType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Declares an enumerated entry that can be used as part of other entry, e.g. ResourceIdentifier,
				CredentialField, DiscoveryParam, etc. Enum declarations are normally enclosed as child nodes
				of a specific field declaration, e.g. ResourceIdentifier
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="value" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Textual value for the enumerated entry that will appear in the combo box.
					Note: enumerated values are not localizeable.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="default" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If true the enumeration entry is selected by default
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ResourceAttributeType">
		<xs:annotation>
				<xs:documentation xml:lang="en">
					ResourceAttribute declares a metric that belongs to the resource kind in a
					certain level of group hierarchy.
				</xs:documentation>
			</xs:annotation>
		<xs:attribute name="key" use="required" type="xs:string">
		<xs:annotation>
				<xs:documentation xml:lang="en">
					Used to identify the resource attribute type for a given resource kind.
					Resource kind attribute keys must be unique for a given parent resource kind attribute group.
					Attributes defined at top level must have unique keys for given resource kind.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="unit" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unit of measurement the metric. eg. MB, GHz and etc.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="unitNameKey" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the unit of measurement. This number refers to one or more
					Name entries with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="dashboardOrder" use="optional" type="xs:integer">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the order of attributes in the UI where applicable.
					Attributes will be presented in ascending order.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="dataType" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the data type of the metric. Supported values:string, integer, float.
					Specifying a data type for attributes is not really required for numeric attributes.
					Generally attributes can have either numeric (i.e. integer, float) or string values.
					Currently specifying integer is same as float.
					String metrics can be visualized in the metric graph in a different way,
					using discrete data points, while numeric metrics are visualized by a continuous metric graph.
					Default is float.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="string"/>
					<xs:enumeration value="integer"/>
					<xs:enumeration value="long"/>
					<xs:enumeration value="float"/>
					<xs:enumeration value="double"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="nameKey" use="optional" type="xs:integer">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the resource attribute. This number refers to one or more
					Name entries with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isProperty" use="optional" type="xs:boolean" default="false">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Declares the attribute as a Property. Properties are slowly changing attributes that
					only reported to the system when updated. Typically configuration information is defined
					as properties, e.g. software version, number of CPUs, available memory, etc.
					If not specified the attribute is considered as a regular attribute, not a property.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isRate" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Declares the attribute values are rates, ususally based on difference of last 2 measurements.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isDiscrete" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Declares the attribute values are discrete numbers, as opposed to regular - continuous numbers.
					This value in combination with dataType and dtType can control the way the
					metric values are presented in the UI.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isImpact" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Declares the attribute as an "impact" attribute, so it will never be considered as
					part of a root cause. For example a user response time measurement out of normal is not
					the root cause of the alert, but normally impacted by some other performance issue.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="defaultMonitored" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines if the attribute should be collected by default in policy
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="dtType" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the preferred dynamic thresholding algorithm to process the attribute.
					For example "string" metrics can be set to dtType='multinomial', so they will be
					processed by MultinomialDT dynamic thresholding algorithm.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="keyAttribute" type="xs:boolean" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If set to true the attribute would be considered as a key attribute and would appear
					in certain widgets (e.g. badge widgets).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<!-- deprecated -->
		<xs:attribute name="defLowThreshold" use="optional" type="xs:string">
			<xs:annotation>
			<xs:documentation xml:lang="en">
					Deprecated.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="defaultAlertLevel" use="optional" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">
					Deprecated.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="defHighThreshold" use="optional" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">
					Deprecated.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="maxVal" use="optional" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">
					Deprecated.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="minVal" use="optional" type="xs:string">
			<xs:annotation>
			<xs:documentation xml:lang="en">
					Deprecated.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="expression" type="xs:string" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					For internal use only.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="derived" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					For internal use only.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="hidden" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					For internal use only.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="PropertyDatatypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Describes the data type </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="String"/>
			<xs:enumeration value="SInt32"/>
			<xs:enumeration value="UInt32"/>
			<xs:enumeration value="SInt64"/>
			<xs:enumeration value="UInt64"/>
			<xs:enumeration value="Decimal"/>
			<xs:enumeration value="Double"/>
			<xs:enumeration value="Boolean"/>
			<xs:enumeration value="DateTime"/>
			<xs:enumeration value="Binary"/>
			<xs:enumeration value="Byte"/>
			<xs:enumeration value="Enum"/>
			<xs:enumeration value="TypeName"/>
			<xs:enumeration value="Any"/>
			<xs:enumeration value="Integer"/>
			<xs:enumeration value="SnapshotData"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="SimpleMethodInfoTypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Base class for SimpleMethoInfo, SimpleMethoInfoList, SimpleMethoInfoSet classes
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="enum" type="describe:enumType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Metadata" type="describe:MetadataType" minOccurs="0"
				maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="dataType" type="describe:PropertyDatatypeType" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Type of data (one of possible PropertyDatatypeType values e.g. String, Integer, Boolean, ...).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="SimpleMethodInfoType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines the parameter passed to the method that handles the Action.
				SimpleMethodInfo can only be used when a method is used for an action that only
				has a single resource parameter. In other words, the action can only have
				one ResourceContext element and the resourceKind must be the target resource kind that the
				method affects.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="describe:SimpleMethodInfoTypeType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SimpleMethodInfoListType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines the parameter passed to the method that handles the Action.
				SimpleMethodInfoList must be used when a method is used for an action that has
				a collection of resources and has more than one parameter.
				(e.g. name=Volume1 cleanUpPercent=10 and name=Volume2 cleanUpPercent=20.)
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="describe:SimpleMethodInfoTypeType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SimpleMethodInfoSetType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines the parameter passed to the method that handles the Action.
				SimpleMethodInfoSet must be used when a method is used for an action that has
				a collection of resources and has only one parameter, or where order of the
				supplied parameter array does not matter. For example, the Delete Powered Off VM
				action requires only one parameter. When selected for a collection of VMs (say from a host or cluster) it doesn't matter in what
				order the list of VMs are sent.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="describe:SimpleMethodInfoType">
				<xs:attribute name="isDupAllowed" type="xs:boolean" use="optional" default="false">
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Attribute isDupAllowed can be used to support unordered set with duplicates.
							If isDupAllowed is not specified or set to false then any duplicate values
							in the set should be eliminated.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="isKey" type="xs:boolean" use="optional" default="false">
					<xs:annotation>
						<xs:documentation xml:lang="en">
							If True the attribute is a key attribute. Default is false.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ComplexMethodInfoTypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This parameter type is not supported in conjunction with actions for this release.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Metadata" type="describe:MetadataType" minOccurs="0"
				maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="dataType" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Type of data (one of possible PropertyDatatypeType values e.g. String, Integer, Boolean, ...).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ComplexMethodInfoType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This parameter type is not supported in conjunction with actions for this release.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="describe:ComplexMethodInfoTypeType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ComplexMethodInfoListType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This parameter type is not supported in conjunction with actions for this release.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="describe:ComplexMethodInfoType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ComplexMethodInfoSetType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This parameter type is not supported in conjunction with actions for this release.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="describe:ComplexMethodInfoType">
				<xs:attribute name="isDupAllowed" type="xs:boolean" use="optional" default="false">
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Attribute isDupAllowed can be used to support unordered set with duplicates.
							If isDupAllowed is not specified or set to false then any duplicate values
							in the set should be eliminated.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ComplexMethodInfoMapType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This parameter type is not supported in conjunction with actions for this release.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="describe:ComplexMethodInfoType">
				<xs:attribute name="collectionKey" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation xml:lang="en">
							The collection key.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="isDupAllowed" type="xs:boolean" use="optional" default="false">
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Attribute isDupAllowed can be used to support unordered set with duplicates.
							If isDupAllowed is not specified or set to false then any duplicate values
							in the set should be eliminated.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ParameterType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines the parameters of the Methods used for Actions.
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0">
			<xs:element name="SimpleMethodInfo" type="describe:SimpleMethodInfoType"/>
			<xs:element name="SimpleMethodInfoList" type="describe:SimpleMethodInfoListType"/>
			<xs:element name="SimpleMethodInfoSet" type="describe:SimpleMethodInfoSetType"/>
			<xs:element name="ComplexMethodInfo" type="describe:ComplexMethodInfoType"/>
			<xs:element name="ComplexMethodInfoList" type="describe:ComplexMethodInfoListType"/>
			<xs:element name="ComplexMethodInfoSet" type="describe:ComplexMethodInfoSetType"/>
			<xs:element name="ComplexMethodInfoMap" type="describe:ComplexMethodInfoMapType"/>
		</xs:choice>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Parameter name.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the parameter. This number refers to one or more
					Name entries with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isRequired" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If true the parameter is required. If false the parameter is optional.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isDeprecated" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If true the parameter is deprecated. If false the parameter is not deprecated.
					Default is false
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isCaseSensitive" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If true the parameter is case sensetive. If false the parameter is not case sensetive.
					Default is false
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="MethodResultType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				The result element is not currently supported. It is defined to support definition of
				results with the same types as the Parameter element.
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0">
			<xs:element name="SimpleMethodInfo" type="describe:SimpleMethodInfoType"/>
			<xs:element name="SimpleMethodInfoList" type="describe:SimpleMethodInfoListType"/>
			<xs:element name="SimpleMethodInfoSet" type="describe:SimpleMethodInfoSetType"/>
			<xs:element name="ComplexMethodInfo" type="describe:ComplexMethodInfoType"/>
			<xs:element name="ComplexMethodInfoList" type="describe:ComplexMethodInfoListType"/>
			<xs:element name="ComplexMethodInfoSet" type="describe:ComplexMethodInfoSetType"/>
			<xs:element name="ComplexMethodInfoMap" type="describe:ComplexMethodInfoMapType"/>
		</xs:choice>
		<xs:attribute name="isRequired" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If true the result is required. If false the result is optional.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isDeprecated" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If true the result is deprecated. If false the result is not deprecated.
					Default is false
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isCaseSensitive" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If true the result is case sensetive. If false the result is not case sensetive.
					Default is false
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ExceptionType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				The exception element is not currently supported.
				It is intended to be used to define the types of exceptions that the method can throw.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="dataType" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The exception element is not currently supported.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="MetadataType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				The Metadata element is available to define anything that doesn't fit in the
				other method subelements (Parameter, Result, Exception).
				Metadata elements are key/value pairs.
				Metadata values are included in the message sent to the templates along with the
				method name and parameters.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Key of the metadata piece.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="value" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Value of the metadata piece.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="MethodType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A Method element is the definition of a method that can be executed through the
				action framework. A Method definition consists of a method name, parameters,
				exceptions, and result. Metadata can aslo be defined for a method to communicate
				additional information to the templates that processes the method.
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Parameter" type="describe:ParameterType"/>
			<xs:element name="Result" type="describe:MethodResultType"/>
			<xs:element name="Exception" type="describe:ExceptionType"/>
			<xs:element name="Metadata" type="describe:MetadataType"/>
		</xs:choice>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A key used for referencing the method. This key has to be exactly
					the same as the methodKey attribute in ActionContext.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Name of the method. Will be removed in next version.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the method. This number refers to one or more
					Name entries with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="executable" type="xs:string" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					This is the name of the script, workflow or other executable item
					that the Method element models. For example a Python script file name or a VCO
					worlflow name.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="MethodsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of Method elements. Multiple methods can be included in one Methods element.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Method" type="describe:MethodType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="ActionContextFieldType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				ActionContextField defines the field (column) of the user interface for an Action.
				It is either an entry field for user to enter some value for the action or
				a display only field for informative purposes. The field may also be hidden. Hidden fields
				can be used to provide method input that does not need to be made visible to the user.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="component" use="optional" default="textfield">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The content type of the field (column). Defaults to textfield.
					Supported types: textfield, numberfield, checkcolumn, positiveintegerfield, combobox.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="textfield"/>
					<xs:enumeration value="numberfield"/>
					<xs:enumeration value="checkcolumn"/>
					<xs:enumeration value="positiveintegerfield"/>
					<xs:enumeration value="combobox"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="dispOrder" type="xs:integer" use="optional" default="0">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					An integer that specifies the order of the columns.
					This will default to zero if not set, which can cause random ordering of the columns.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unique key that can be used to refer to this ActionFieldContext.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the action context field. This number refers to one or more
					Name entries with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="value" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A string containing either a SpEL (Spring Expression Language) expression, or
					a default value. SpEL expressions can be used to derive context specific information
					about a resource to display in the user interface and supply to methods as input.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="hidden" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A boolean value used to specify if the field (column) should be visible to the user or not.
					This is used for values that the user may not be interested in,
					but are necessary for running an action. Defaults to false
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="input" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A boolean flag (true/false) that specifies if the field (column) can take user input or not.
					If true the column is en enrty field. Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="parameter" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The method parameter to which the field (column) value is assigned. If it is not populated,
					then the field (column) does not map to a parameter value. The value of parameter must
					exactly match the corresponding method parameter's key value. Fields that are display only
					do not require this attribute.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="ActionContextType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				ActionContext contains ActionContextField elements that define what is displayed in
				the Action UI when an Action is selected.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ActionContextField" type="describe:ActionContextFieldType" maxOccurs="unbounded" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unique key that can be used to refer to this ActionContext.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="helpId" type="xs:string" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A string value that identifies context sensitive help that is presented to the user
					when they select the actions help link. Currently, this value is limited to
					referencing help documented in the vCenter Operations Manager supplied documentation.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="methodKey" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The value of the key attribute of the corresponding Method that will be executed
					when the action is selected.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="ResourceContextType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				ResourceContext defines the context from which the action can be selected.
			</xs:documentation>
		</xs:annotation>
			<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unique key of this ResourceContext.
					The key value will be the displayed action name in the Actions menu in the
					absence of loclization strings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the ResourceContext. This number refers to one or more Name entries
					with matching key attribute in Names sequence defined in the templates describe.
					The referenced localized name will be the action name displayed to the user in
					the Actions Menu.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="adapterKind" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The templates kind of the resource kind from which the action will be available.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="resourceKind" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The resource kind from which the action will be available.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="resourceTarget" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					An expression that provides an identifier of the resource that is the target of the action.
					This will usually be a SpEL (Spring Expression Language) expression that traverses the relationship
					from the context resource to the target resource. For example, to get the identifiers of vms when
					the action is initiated from a host:
					resourceTarget="children('VMWARE','VirtualMachine').![resourceUuid]"
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="filter" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The filter attribute is currently ignored.
					The intended use is to allow filtering of resourceTarget to which an action applies.
					For example, to distinguish between a VM and a VM Template.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="ActionType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines an action. Multiple Actions can be defined within an adapter.
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ResourceContext" type="describe:ResourceContextType" minOccurs="1" maxOccurs="unbounded"/>
			<xs:element name="ActionContext" type="describe:ActionContextType" minOccurs="1" maxOccurs="unbounded"/>
		</xs:choice>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unique key of this action.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="actionType" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the type of action. Supported values are: update, read.
					update: an action that updates an object.
					read: an action to retrieves information from an object.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="update"/>
					<xs:enumeration value="read"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="adapterEndpointExpression" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A SpEl (Spring Expression Language) Expression that is evaluated against
					Adapter Instance Resource (ResourceData).
					The resulting value of this expression should resolve to an identifier that can be used to
					identify the templates instance responsible for actions on a specific resource. For example,
					resources collected by the VMWARE templates each have an attribute identifying the vCenter that
					they were collected from. The action templates for executing actions to change these resources
					stores a vCenter uuid of the vCenter it is configured to manage.
					When an action is selected, the adapterEndpointExpression value is compared to the
					resourceEnpointExpression value to determine to which action templates to direct the action task.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="resourceEndpointExpression" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A SpEL (Spring Expression Language) Expression that is evaluated against a Resource (ResourceData).
					The resulting value of this expression should resolve to an identifier that can be used to
					identify the templates instance responsible for actions on a specific resource. For example, resources collected by the VMWARE
					templates each have an attribute identifying the vCenter that they were collected from. The action templates for
					executing actions to change these resources stores a vCenter uuid of the vCenter it is configured to manage.
					When an action is selected, the adapterEnpointExpression value is compared to the resourceEnpointExpression value
					to determine to which action templates to direct the action task.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="ActionsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A collection of Action elements.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Action" type="describe:ActionType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="CapacityDefinitionsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A Collection of CapacityDefinition elements.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CapacityDefinition" type="describe:CapacityDefinitionType" maxOccurs="unbounded" minOccurs="1"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="CapacityDefinitionType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Each CapacityDefinition contains information (mapping) for badge computation.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Config" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:choice>
						<xs:element name="HAPolicy" maxOccurs="1" minOccurs="0">
							<xs:complexType>
								<xs:attribute type="xs:string" name="alias" use="required" />
							</xs:complexType>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResourceContainer" type="describe:ResourceContainerType" maxOccurs="unbounded" minOccurs="1"/>
		</xs:sequence>
		<xs:attribute type="xs:string" name="key" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unique key to identify a capacity definition.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="consumer" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Specifies the resource kind of resources consuming the defined capacity.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="consumerPath" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Not supported in current version. It's supposed to represent complex consumer relationship.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="provider" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Specifies the resource kind of resources providing the defined capacity.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="defaultProvider" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Specifies the resource kind of default provider.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:group name="CapacityMetricsDescribeGroup">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This is the section that defines how each metric (eg. Capacity, Usage, and etc) is computed
				(or mapped to a resource metric). Out of all metrics, at least, Capacity and Usage should be aliased.
				The more aliases, the richer the model.
			</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Usage" maxOccurs="1" minOccurs="1">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the Usage parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Demand" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the Demand parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Capacity" maxOccurs="1" minOccurs="1">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the Capacity parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="PowerState" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the PowerState parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Reservation" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the Reservation parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Limit" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the Limit parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="AccessTime" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the AccessTime parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="ChildCount" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the ChildCount parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Overhead" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the Overhead parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Contention" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the Contention parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Entitlement" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the Entitlement parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="MaxConsumerCount" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the MaxConsumerCount parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="CapacityConsumptionUnitCount" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the metric that represents the CapacityConsumptionUnitCount parameter in CapacityDefinition model.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="alias" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource metric key that is assigned to the specified capacity metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="ConsumptionCountUnit" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							The unit to use for count based capacity consumption, if applicable.
							For example, CPU may have a unit of Mhz, but since there is a semantic of
							count based consumption in terms of CPU cores, it can have a
							consumptionCountUnit of 'Cores(s)'.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:integer" name="unitNameKey" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Localized name id for the unit. This number refers to one or more
								Name entries with matching key attribute in Names sequence defined in the templates describe.
								Localized names can be externalized to resources property file.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="HAConfig" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the configuration setting to use when accounting for reduced capacity
							due resources reserved for High Availability (vShpere specific).
						</xs:documentation>
					</xs:annotation>
					<xs:choice>
						<xs:element name="IsDedicatedResource" maxOccurs="1" minOccurs="0">
							<xs:complexType>
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Defines the metric that represents the IsDedicatedResource parameter in CapacityDefinition model.
									</xs:documentation>
								</xs:annotation>
								<xs:attribute type="xs:string" name="alias" use="required" >
									<xs:annotation>
										<xs:documentation xml:lang="en">
											The resource metric key that is assigned to the specified capacity metric.
										</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="HAProvider" maxOccurs="1" minOccurs="0">
							<xs:complexType>
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Defines the metric that represents the HAProvider parameter in CapacityDefinition model.
									</xs:documentation>
								</xs:annotation>
								<xs:attribute type="xs:string" name="alias" use="required" >
									<xs:annotation>
										<xs:documentation xml:lang="en">
											The resource metric key that is assigned to the specified capacity metric.
										</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:sequence>
							<xs:element name="BufferPercent" maxOccurs="1" minOccurs="0">
								<xs:complexType>
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Defines the metric that represents the BufferPercent parameter in CapacityDefinition model.
										</xs:documentation>
									</xs:annotation>
									<xs:attribute type="xs:string" name="alias" use="required" >
										<xs:annotation>
											<xs:documentation xml:lang="en">
												The resource metric key that is assigned to the specified capacity metric.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
							<xs:element name="ResourceCount" maxOccurs="1" minOccurs="0">
								<xs:complexType>
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Defines the metric that represents the ResourceCount parameter in CapacityDefinition model.
										</xs:documentation>
									</xs:annotation>
									<xs:attribute type="xs:string" name="alias" use="required" >
										<xs:annotation>
											<xs:documentation xml:lang="en">
												The resource metric key that is assigned to the specified capacity metric.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>

	<xs:complexType name="ResourceContainerType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines the capacity model grouping.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ResourceContainer" type="describe:ResourceContainerType" maxOccurs="unbounded" minOccurs="0"/>
			<xs:group ref="describe:CapacityMetricsDescribeGroup" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute type="xs:string" name="key" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Uniquely identifies the ResourceContainer. This can be used to refer to the ResourceContainer
					from other places in describe document.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="nameKey" use="optional" >
		<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the resource container. This number refers to one or more
					Name entries with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="unit" use="optional" >
		<xs:annotation>
				<xs:documentation xml:lang="en">
					The unit of measurement the metric. eg. MB, GHz and etc.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="unitNameKey" use="optional" >
		<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the unit of measurement. This number refers to one or more
					Name entries with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="displayOrder" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the order of ResourceContainer in the UI in ascending order.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="instanced" use="optional" >
		<xs:annotation>
				<xs:documentation xml:lang="en">
					True if the capacity model group is instanced, false otherwise.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="workloadInstanced" use="optional" >
		<xs:annotation>
				<xs:documentation xml:lang="en">
					If true thie nstance level workload computation is enabled.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="instanceAgg" use="optional" >
		<xs:annotation>
				<xs:documentation xml:lang="en">
					Aggregate data from related objects (consumers/providers)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="model" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the model type for CapacityDefinition of this ResourceContainer.
					Supported Values: default, alloc, rollupContainer, usageOnlyWaste, .... The default is usage.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="consumerResourceContainerKey" use="optional" >
		<xs:annotation>
				<xs:documentation xml:lang="en">
					The key of the container on the consumer which should be used for computations when the consumer container
					is different from the provider.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="providerResourceContainerKey" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The key of the container on the provider which should be used for computations when the provider container
					is different from the consumer.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="publishMetrics" use="optional" >
		<xs:annotation>
				<xs:documentation xml:lang="en">
					True to publish calculated metrics. If attribute is not included it defaults to true.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="consumer" use="optional" >
		<xs:annotation>
				<xs:documentation xml:lang="en">
					Specifies the resource kind of the consuming resources.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="consumerPath" use="optional" >
		<xs:annotation>
				<xs:documentation xml:lang="en">
					Not supported in current version. It's supposed to represent complex consumer relationship.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="provider" use="optional" >
		<xs:annotation>
				<xs:documentation xml:lang="en">
					Uniquely identifies the ResourceContainer. This can be used to refer to the ResourceContainer
					from other places in describe document.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="workloadBreakdownResourceKinds" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Uniquely identifies the ResourceContainer. This can be used to refer to the ResourceContainer
					from other places in describe document.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="whatIfApplicable" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If set to false means the container cannot and will not participate in whatif project computations.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="whatIfInternal" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If set to true, conatiner will not be visualized in whatif projects.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="isCapacityEstimated" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Set to true if capacity is estimated.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="isComputeFromConsumers" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If set to true the computations for the container will be based on the relevant container on consumers.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="isComputeFromProviders" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If set to true, computations for the container will be based on the relevant container on providers.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:long" name="minimumSizeRecommendation" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Minimum size recommendation. If present non zero calculated size recommendation for the container will be at least equal to minimumSizeRecommendation.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="modularityForSizeRecommendation" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Modularity for size recommendation. If present calculated Size recommendation for the container would always be multiple of modularityForSizeRecommendation.
					We always round calculated size recommendation to the next valid value based on modularity for e.g. if calculated size recommendation is 233 and modularityForSizeRecommendation
					is 4, then size recommendation will be rounded to 236 which is next valid value based on modularity .
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="physicalUnitNameKey" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Additional unit name key for a container for e.g. cpu may have two units i.e. Physical Cpu (pCpu) or Virtual Cpu (vCpu).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="LaunchConfigurationsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of LaunchConfig and ConfigMapping elements.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence maxOccurs="unbounded" minOccurs="1">
			<xs:element name="LaunchConfig" type="describe:LaunchConfigType" maxOccurs="unbounded" minOccurs="1"/>
			<xs:element name="ConfigMapping" type="describe:ConfigMappingType" maxOccurs="unbounded" minOccurs="1"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="LaunchConfigType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				The Launch Configuration that creates a link in UI in order to launch an external application
				(or any internal landing page) via "URL" in a specific context defined by selected Resource or Alert.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element type="xs:string" name="HostProtocol" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						The domain url to launch.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element type="xs:string" name="UriTemplate" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						The request parameters passed to launch url.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Variable" maxOccurs="unbounded" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Used to define variables to be used in HostProtocol and UriTemplate.
						</xs:documentation>
					</xs:annotation>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute type="xs:string" name="name" use="required" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Name of the variable.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:string" name="key" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unique key to idenitfy a Launch Configuration for a given adapter.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="adapterKindKey" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Regular Expression to match the AdapterKinds of the selected Resource (Resource in context).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="resourceKindKey" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Regular Expression to match ResourceKind of the selected Resource (Resource in context).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="nameKey" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the LaunchConfig. This number refers to one or more Name entries
					with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="alertType" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Regular Expression to match the alert Type of the selected Alert (Alert in context).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="alertSubType" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Regular Expression to match the alert Subtype of the selected Alert (Alert in context).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="active" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Regular Expression allows an templates writer to provide an expression to control when the config is valid
					beyond just matching templates, resource and alerts kinds. For example, it is used by the log insight templates
					to check for the existing of a "special relationship" between "special resources" pushed
					into vC Ops through HttpPost.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="ConfigMappingType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				The map of all pages in vC Ops that the launch link will appear. e.g. "environment-overview",
				"resource-detail", alerts-overview, ...
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute type="xs:string" name="uiConfigKey" use="required" >
					<xs:annotation>
						<xs:documentation xml:lang="en">
							The name of the page where the link will appear
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute type="xs:string" name="launchConfigKey" use="required" >
					<xs:annotation>
						<xs:documentation xml:lang="en">
							The key of maching LaunchConfig.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute type="xs:integer" name="dispOrder" use="required" >
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the order of LaunchConfig links in the UI in ascending order.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<xs:complexType name="CustomGroupMetricsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Used to created new metrics for CustomGroups based on the "expression" attribute of the "ResourceAttribute".
				See ResourcGroup and ResourceAttribute elements.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ResourceGroup" type="describe:ResourceGroupType" maxOccurs="unbounded" minOccurs="1"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="SymptomDefinitionsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of SymptomDefinition elements.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SymptomDefinition" type="describe:SymptomDefinitionType" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="SymptomDefinitionType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A Symptom definition is a rule or condition to identify and track the state of
				metrics, properties, events and faults on objects. A Symptom triggers when the
				Symptom definition rule is satisfied. A Symptom definition can be included in a
				Alert Definition in order to trigger alert based on the Symptom.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" maxOccurs="1" minOccurs="1">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							State defines the condition under which the Symptom should be triggered and
							its severity.
						</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="Condition" type="describe:ConditionType" maxOccurs="1" minOccurs="1"/>
					</xs:sequence>
					<xs:attribute name="severity" use="required">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The severity (criticality) level of the entire state.
								Supported Values: Info, Warning, Immediate, Critical.
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="Info"/>
								<xs:enumeration value="Warning"/>
								<xs:enumeration value="Immediate"/>
								<xs:enumeration value="Critical"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:ID" name="id" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unique id of the Symptom for this adapter.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="nameKey" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the Symptom. This number refers to one or more Name entries with matching
					key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="adapterKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The AdapterKind key of the Resource for which the Symptom is defined.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="resourceKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The ResourceKind key of the Resource for which the Symptom is defined.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:byte" name="waitCycle" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Number of monitoring cycles to wait after the Symptom state conditions are
					fulfilled to make the Symptom active. Defaults to 1 if unspecified.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:byte" name="cancelCycle" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Number of monitoring cycles to wait after the Symptom state conditions no longer exist
					before canceling the Symptom. Defaults to 1 if unspecified.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="ConditionType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines a condition under which a Symptom will trigger.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="type" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Declares type of the condition.
					Examples are: "htmetric" - based on Metric Hard Threshold ,
					"dtmetric" - based on Metric Dynamic Threshold, "msg_event" - based on Event Message content
					Supported Values: "htmetric", "dtmetric", "htsuper", "dtsuper", "fault", "property",
					"msg_event", "metric_event"
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="htmetric"/>
					<xs:enumeration value="dtmetric"/>
					<xs:enumeration value="htsuper"/>
					<xs:enumeration value="dtsuper"/>
					<xs:enumeration value="fault"/>
					<xs:enumeration value="property"/>
					<xs:enumeration value="msg_event"/>
					<xs:enumeration value="metric_event"/>
					<xs:enumeration value="smart"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute type="xs:string" name="key" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If condition is of type "htmetric", "htsuper", "dtmetric", "dtsuper", "property",
					"metric_event", then the complete metric or property key
					(e.g. Capacity|Used_Space_Percent where "Capacity" is the ResourceGroup name
					and "Used_Space_Percent" is the ResourceAttribute name)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="operator" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The operator used for evaluation of the condition (e.g. "=", "&lt;", "above" for numeric values,
					"contains" for event messages...).
					It is required for all condition types except "fault" condition types.
					Supported Values:
					For HT metric, supermetric and Numeric properties: "&gt;" (greater than), "&gt;=" (greater than or equal),
					"&lt;" (less than), "&lt;=" (less than or equal), "=", "!="
					For String properties: "=", "!=", "startswith", "notstartwith", "endswith", "notendwith",
					"contains", "notcontain", "regex", "notregex"
					For DT metric and supermetric: "above", "below", "abnormal"
					For metric event: "exists"
					For Message event: "equals", "contains", "notcontain", "regex", "notregex"
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="&gt;"/>
					<xs:enumeration value="&gt;="/>
					<xs:enumeration value="&lt;"/>
					<xs:enumeration value="&lt;="/>
					<xs:enumeration value="="/>
					<xs:enumeration value="!="/>
					<xs:enumeration value="startswith"/>
					<xs:enumeration value="notstartwith"/>
					<xs:enumeration value="endswith"/>
					<xs:enumeration value="notendwith"/>
					<xs:enumeration value="above"/>
					<xs:enumeration value="below"/>
					<xs:enumeration value="abnormal"/>
					<xs:enumeration value="exists"/>
					<xs:enumeration value="equals"/>
					<xs:enumeration value="contains"/>
					<xs:enumeration value="notcontain"/>
					<xs:enumeration value="regex"/>
					<xs:enumeration value="notregex"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="instanced" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Applicable only for "htmetric", "dtmetric", "htsuper" and "dtsuper" types.
					True if the Symptom should be evaluated by considering ResourceGroup instance
					for the metric, false otherwise.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="value" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The value used for evaluation of the condition.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="valueType" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The type of the value (e.g. "numeric","string").
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="numeric"/>
					<xs:enumeration value="string"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute type="xs:string" name="faultevent" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Applicable only for fault condition. A comma-separated list of one or more
					fault event keys (key attribute of ProblemEvent element in describe).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="eventType" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The type of the event. Needed only for msg_event or metric_event condition.
					(e.g. "11" means "Notification" event)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="eventSubType" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If an event condition, the subtype of the event.
					(e.g. "5" means "external" event)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="eventMsg" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Content of the message of the event to match.
					Needed only for msg_event condition.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<!--xsd:assert test="(@type and @key and @operatornot(@uri)) or (not(@ref) and @uri)"/ -->
	</xs:complexType>

	<xs:complexType name="RecommendationsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of Recommendation elements.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Recommendation" type="describe:RecommendationType" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="RecommendationType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Recommendation definition containing a descriptive text as how to remediate the alert
				condition. It can optionally include an automated action to run.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Description" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							The Recommendation text.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:integer" name="nameKey" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Localized name id for the description of the Recommendation. This number refers
								to one or more Name entries with matching key attribute in Names sequence defined
								in the templates describe.
								Localized names can be externalized to resources property file.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Action" maxOccurs="1" minOccurs="0" >
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							The Recommendation's automated Action's information.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="actionAdapterKey" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The templates kind of the templates that defines this action.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:string" name="targetResourceKind" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The resource kind for which this Recommended Action applies to.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:string" name="actionKey" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The key for this action. This corresponds to the Action Key
								field in the Action Definition.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:ID" name="key" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unique key to identify the Recommendation within this adapter. Referenced from AlertDefinition.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="AlertDefinitionsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of AlertDefinition elements.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AlertDefinition" type="describe:AlertDefinitionType" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute type="xs:boolean" name="forceUpdate" use="optional" default="false" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If true it would force the update to the existing AlertDefintions, SymptomDefinitions and Recommendation.
					It is recommended to set to false and let the user make the choice for update from the product user interface.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="AlertDefinitionType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				An Alert Definition is a rule to define the condition under which an alert should be
				triggered on an object and includes a list of Recommendations to resolve the alert.
				The rule is built as an expression containing Symptom Definition references
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" maxOccurs="1" minOccurs="1">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines an expression based on Symptom Definition references to specify the trigger
							condition for alert, the severity of the alert and its impact on the badges, and Recommendations
							to resolve the alert.
						</xs:documentation>
					</xs:annotation>
					<xs:all>
						<xs:element name="SymptomSets" type="describe:symptomsetsType" maxOccurs="1" minOccurs="0"/>
						<xs:element name="SymptomSet" type="describe:symptomsetType" maxOccurs="1" minOccurs="0"/>
						<xs:element name="Impact" type="describe:impactType" maxOccurs="1" minOccurs="1"/>
						<xs:element name="Recommendations" type="describe:recommendationsType" maxOccurs="1" minOccurs="0"/>
					</xs:all>
					<xs:attribute name="severity" use="required">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The severity (criticality) level of the entire state.
								Supported Values: Automatic, Info, Warning, Immediate, Critical.
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="Automatic"/>
								<xs:enumeration value="Info"/>
								<xs:enumeration value="Warning"/>
								<xs:enumeration value="Immediate"/>
								<xs:enumeration value="Critical"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:string" name="id" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unique id of the AlertDefinition for this adapter.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="name" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The name of the Alert Definition. Will also be the name of the
					alert that is triggered based on this definition.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="description" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A brief description of the nature of the issue.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="nameKey" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the AlertDefinition. This number refers to one or more Name entries
					with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:byte" name="waitCycle" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Number of monitoring cycles to wait after all the Symptoms conditions listed
					in the Alert state are fulfilled, before generating the alert.
					Defaults to 1 if unspecified.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:byte" name="cancelCycle" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Number of monitoring cycles to wait after all the Symptom conditions listed
					in the Alert state no longer exist, before canceling the alert.
					Defaults to 1 if unspecified.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="adapterKind" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The AdapterKind key of the base object type for which the Alert is defined.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="resourceKind" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The ResourceKind key of the base object type for which the Alert is defined.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:byte" name="type" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The type of the alert (e.g. 18 which means Storage Alert).
					Supported Values: 15 (Application), 16 (Virtualization), 17 (Hardware),
					18 (Storage), 19 (Network)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:byte" name="subType" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The subtype of the alert (e.g. 20 which means Capacity issue).
					Supported Values: 18 (Availability), 19 (Performance ), 20 (Capacity), 21 (Compliance)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="disableInBasePolicy" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					For internal use only.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="allowMultipleAlertsPerResource" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					For internal use only.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="symptomsetsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A logical combination of multiple SymptomSet elements or nested sub SymptomSets elemnets.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SymptomSets" type="describe:symptomsetsType" maxOccurs="unbounded" minOccurs="0"/>
			<xs:element name="SymptomSet" type="describe:symptomsetType" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="operator" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The logical operator to combine SymptomSets (e.g. "and", "or").
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="and"/>
					<xs:enumeration value="or"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType	name="symptomsetType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A collection of one or more Symptom definition references for a resource kind
				that is related to the resource kind of the base object type.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Symptom" maxOccurs="unbounded" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Reference to a Symptom that is defined as SymptomDefinition.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:IDREF" name="ref" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The reference id of the Symptom Definition defined in this describe file for this templates
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:boolean" name="negateCondition" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Flag to turn on logical negation of the Symptom condition.
								If true, Symptom should not be triggered for condition to be
								evaluated as true.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="applyOn" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The relationship through which the Symptom definition's resourceKind is related
					to the resource kind of the base object type. (e.g. self, child, parent).
					"self" means Symptoms deined on the same ResourceKind as the Alert is defined for.
					"child" means Symptoms are defined on any child of the ResourceKind of the Alert.
					"parent" means Symptoms are defined on any parent of the ResourceKind of the Alert.
					"ancestor" means Symptoms are defined on any ancestor of the ResourceKind of the Alert.
					"descendant" means Symptoms are defined on any descendant of the ResourceKind of the Alert.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="self"/>
					<xs:enumeration value="ancestor"/>
					<xs:enumeration value="parent"/>
					<xs:enumeration value="descendant"/>
					<xs:enumeration value="child"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="aggregation" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The type of grouping to be done on the resources that exhibit the specified Symptoms in that
					Symptom set. (note: this is not an aggregation of Symptoms, but an aggregation of resources.
					like 50 percent of child VMs). If "percent" or "count" then "aggregationOperator" and "value" are required.
					Supported Values: percent, count, any, all.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="percent"/>
					<xs:enumeration value="count"/>
					<xs:enumeration value="any"/>
					<xs:enumeration value="all"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="aggregationOperator" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The operator used for aggregation (e.g. "=", ">").
					Supported Values: "&gt;" (greater than), "&gt;=" (greater than or equal), "&lt;" (less than),
					"&lt;=" (less than or equal), "=", "!="
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="&gt;"/>
					<xs:enumeration value="&gt;="/>
					<xs:enumeration value="&lt;"/>
					<xs:enumeration value="&lt;="/>
					<xs:enumeration value="="/>
					<xs:enumeration value="!="/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute type="xs:double" name="value" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The numeric value used for aggregation evaluation when it is set to percent
					or count (e.g. 50)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:IDREF" name="ref" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					the reference id of the Symptom defined in this describe file for this templates
					(in compact form definition).
					The compact form can be used if there is only one Symptom definition reference in the SymptomSet.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="operator" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The operator to apply between the Symptoms in a Symptom set.
					(if there is more than one Symptom in the SymptomSet)(e.g. "and", "or").
					Supported Values: "and", "or"
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="and"/>
					<xs:enumeration value="or"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="negateCondition" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The logical negation of the Symptom condition (in compact form definition).
					The compact form can be used if there is only one Symptom definition reference in the SymptomSet.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="impactType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines what would be impacted. For now the only object is badge and the Impact would be
				on one of the top level badges.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="type" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The type of the object impacted.
					Supported Types: "badge" - (for now only badges are the Impact object)
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="badge"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="key" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The impacted object key.
					Supported values: "health" "risk", "efficiency".
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="health"/>
					<xs:enumeration value="risk"/>
					<xs:enumeration value="efficiency"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="recommendationsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A collection of Recommendation references for this alert definition.
				All the references should resolve to the Recommendations defined in this templates describe.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Recommendation" maxOccurs="unbounded"	minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							A reference to a defined Recommendation.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:IDREF" name="ref" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The reference id of the Recommendation.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:string" name="priority" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The order that the Recommendation is displayed in the UI.
								Higher priority Recommendations are expected to be better solutions
								for resolving the alert.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="TraversalSpecKindsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A Collection of TraversalSpecKind elements.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TraversalSpecKind" type="describe:TraversalSpecKindType" maxOccurs="unbounded"	minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="TraversalSpecKindType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines a complete traversal Spec Kind.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ResourcePath" maxOccurs="unbounded" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Path of resources.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="path" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Resource path to traverse starting from resources of type rootResourceKind and rootAdapterKind
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:string" name="targetResourceKinds" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An optional parameter that indicates the resources that will be selected
								when traversing resource paths.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:integer" name="maxPropogationLevelOfWildCard" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Indicates how many levels in the graph the wild card applies to starting from the position
								of the wild card.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:string" name="name" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Identifies the TraversalSpecKind.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nameKey" type="xs:integer" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the traversal spec. This number refers to one or more Name entries
					with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="filterType" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Denotes the logic that will be applied to evaluate the traversal specs.
					(e.g. GENERIC_RELATION and ADAPTER_ASSOCIATION). Default is GENERIC_RELATION.
					The ADAPTER_ASSOCIATION is a specific case for internal use.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="ADAPTER_ASSOCIATION" />
					<xs:enumeration value="GENERIC_RELATION" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute type="xs:string" name="rootAdapterKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					AdapterKind of the root node of the tree created based on this Traversal Spec.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="rootResourceKind" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					ResourceKind of the root node of the tree created based on this Traversal Spec.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="description" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A brief description of the traversal tree.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="usedFor" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					It is possible to specify an optional attribute called "usedFor" in TraversalSpecKind to specify
					what purpose the traversal spec will be used for.
					The values specified in this attribute should be separated by "|" character.
					The values specified should also match the enum names in com.integrien.alive.common.util.TraversalSpecUseType
					as shown below:
					NAV("For UI navigation")
					AUTH("For use in assign permissions on object tree")
					GROUP("For use in creating custom groups")
					DASHBOARD("For use in creating dashboards")
					VIEWS("For use in creating views")
					INTERNAL("For internal use, does not show up in UI")
					ALL("For all purposes")
					If this value is not specified or if it is specified as "ALL", then the traversal spec will be treated
					as applicable for all the use cases.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="iconName" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The name of the icon image file to be displayed in UI fro this traversal spec.
					The file should be located in the "TraversalSpec" sub folder under templates's conf/images folder.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="FaultsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A collection of FaultState elements.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FaultState" type="describe:FaultStateType" maxOccurs="unbounded"	minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="FaultStateType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				The state that defines the fault.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProblemEvent" maxOccurs="unbounded" minOccurs="1">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the event that triggers the fault alert.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="key" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Unique identifier (for a given resource kind) that is used to identify
								the fault problem event that would trigger the fault alert at runtime.
								This is the id filled into eventId field in FaultExternalEvent.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:integer" name="faultScore" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								A score greater than 0 and less than or equal to 100 that signifies the criticality or Impact of the fault.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:integer" name="nameKey" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Localized name id for the ProblemEvent. This key's text is used to
								represent the problem event in Symptom definition if the fault is
								going to be an alert.
								Localized names can be externalized to resources property file.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="ClearEvent" maxOccurs="unbounded" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the event that clears the fault alert.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="key" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Unique identifier (for a given resource kind) that is used to identify
								the fault clear event that would clear the fault alert at runtime.
								This is the id filled into eventId field in FaultExternalEvent.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:integer" name="nameKey" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Localized name id for the ClearEvent. This key's text is used to
								represent the clear event in Symptom definition if the fault is
								going to be an alert.
								Localized names can be externalized to resources property file.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:string" name="key" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unique identifier for a fault (for a given resource kind) , recommended to be name spaced.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="resourceKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The resource kind for which the fault is applicable. The combination of resource kind
					and the key needs to be unique
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="autoGenerateAlertDefs" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If set to true the describe process will automatically generate Symptoms
					and alerts for the fault. Default is false.
					Set this to true for faults that you want the alerts on/affect badge.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="adapterComputed" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					This was added for one specific fault of ours that needed to be special cased.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="perDevice" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Used to indicate fault has devices. For example, network faults on a host
					have NICs as devices because NICs are not first class objects, yet we
					want to track them in a fault. This means the 'devices' map in the
					FaultExternalEvent shuold be populated for both alert and clear
					events (the key in the map is unique device IDs and value is description for device).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="nameKey" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the FaultState (represent the fault in alert
					definition if the fault is going to be an alert).
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="BasePolicyAnalysisSettingsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of Policy declarations. Declares all policies supported by given adapter.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PolicySettings" type="describe:PolicySettingsType" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="OOTBPoliciesType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Collection of OOTB (out of the box) Policy declarations. Declares all OOTB policies supported by given adapter.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Policy" type="describe:OOTBPolicyType" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute type="xs:integer" name="vendorNameKey" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the Vendor of OOTB Policies.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="OOTBPolicyType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				An OOTB Policy can include zero or more Policy Settings each for a specific Adapter Kind and Resource Kind.
				An OOTB Policy can include at most one Package Settings.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PolicySettings" type="describe:PolicySettingsType" maxOccurs="unbounded" minOccurs="0"/>
			<xs:element name="PackageSettings" type="describe:PackageSettingsType" maxOccurs="1" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute type="xs:string" name="key" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unique key of the OOTB policy.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="parentPolicy" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unique key of the OOTB policy that this policy inherits. If no parent policy is specified then
					Base Settings is inherited.
					Note: Only define settings that are different from policy setttings of the Adapter Kind and Resource Kind that
					are already part of parent policy settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="nameKey" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the OOTB Policy.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="PolicySettingsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Includes all the customized Analysis Settings for this OOTB Policy.
				An OOTB Policy can be assigned to a Custom Group and become an Active Policy.
				Note that there is no setttings for "Anomaly" and "Fault" except for Badge Scores.
				Each Policy can include multiple Policy Settings each for a specific Adapter Kind and Resource Kind.
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:sequence>
				<xs:element name="StressedSettings" type="describe:StressedSettingsType" maxOccurs="1" minOccurs="0"/>
				<xs:element name="UsableCapacitySettings" type="describe:UsableCapacitySettingsType" maxOccurs="1" minOccurs="0"/>
				<xs:element name="WorkloadSettings" type="describe:WorkloadSettingsType" maxOccurs="1" minOccurs="0"/>
				<xs:element name="CapacityTimeRemainingSettings" type="describe:CapacityTimeRemainingSettingsType" maxOccurs="1" minOccurs="0"/>
				<xs:element name="TimeSettings" type="describe:TimeSettingsType" maxOccurs="1" minOccurs="0"/>
				<xs:element name="ReclaimableCapacitySettings" type="describe:ReclaimableCapacitySettingsType" maxOccurs="1" minOccurs="0"/>
				<xs:element name="DensitySettings" type="describe:DensitySettingsType" maxOccurs="1" minOccurs="0"/>
			</xs:sequence>
			<xs:element name="BadgeSymptoms" type="describe:BadgeSymptomsType" maxOccurs="1" minOccurs="0"/>
			<xs:element name="Symptoms" type="describe:SymptomsType" maxOccurs="1" minOccurs="0"/>
			<xs:element name="Alerts" type="describe:AlertsType" maxOccurs="1" minOccurs="0"/>
			<xs:element name="Metrics" type="describe:MetricsType" maxOccurs="1" minOccurs="0"/>
		</xs:choice>
		<xs:attribute type="xs:string" name="key" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unique key for this policy setting definition which can be referred by other policy settings within the same OOTB policy
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unique key of the policy (if any) that this policy inherits the settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="adapterKind" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The Adapter Kind key for which current policy settings is applicable.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="resourceKind" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The Resource Kind key for which policy current settings is applicable.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="StressedSettingsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines how Stress is calculated.
				Stress is a measurement of the workload on a resource object over time.
				The Stress Score is the % of the stress zone area with stress in selected time sample.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ApplicableResourceContainer" type="describe:ApplicableResourceContainerType" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unique key of the policy (if any) that this policy inherits the settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:double" name="stressedPercentThreshold" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Threshold represents the percentage of capacity for container. When demand is above this threshold, container is considered to be stressed
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="logicOperator" use="optional" >
		<xs:annotation>
			<xs:documentation xml:lang="en">
					The logical operator used among container resources to determine if the Resource is stressed.
					Supported values: OR, AND
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="OR"/>
					<xs:enumeration value="AND"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="ApplicableResourceContainerType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Resource Container that is used for calculation of an Analysis Setting.
				A Resource Container is an entity that its value plays a role in definition of Capacity models.
				Examples are diskspace, cpu, memory, etc.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute type="xs:string" name="resourceContainerKey" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The key of the ResourceContainer defined in CapacityDefinition Describe.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="subResourceContainerKey" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The key of the subResourceContainer defined for the ResourceContainer in CapacityDefinition Describe.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="modelKey" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The model of the ResourceContainer in CapacityDefinition Describe.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="kind" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					For over-commit policy setting kind.
					Supported values: PERCENT for percentage, RATIO for ratio.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="enabled" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If the container is enabled in UI.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="hidden" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If the container is hidden in UI.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:double" name="threshold" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The meaning of the threshold attributes depends on the Analysis Setting that the
					resource container is defined for. For example if it is used for Stress Settings the value
					of the threshold (a percentage value of the capacity of container resource) determines the value that
					above which the container resource is considered to be stressed.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="slaEntireRange" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A parameter of Sliding Analysis Window.
					If set to true the calculation is based on the entire time range defined in 'Time' section element of policy.
					If set to false then the time duration is in effect and the calculation would repeat every so many time.
					Default is true.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="slaDuration" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					A parameter of Sliding Analysis Window.
					If slaEntireRange is false then this is the time in hours for calculation to repeat.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="UsableCapacitySettingsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines how Usable Capacity is calculated.
				Usable capacity is a measurement of the percentage of capacity available,
				minus the capacity affected by High Availabilty, overcommit values, and capacity buffers.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CapacityBuffer" maxOccurs="unbounded" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the percentage of reserved capacity of a resource container for a Resource.
						</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="ApplicableResourceContainer" type="describe:ApplicableResourceContainerType" maxOccurs="unbounded" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OverCommit" maxOccurs="unbounded" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines the percentage of capacity overcommit of a resource container for a Resource.
						</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="ApplicableResourceContainer" type="describe:ApplicableResourceContainerType" maxOccurs="unbounded" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unique key of the policy (if any) that this policy inherits the settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="useHA" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If set to true Usable Capacity calculation is based on High Availability Configuration.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="capacityCalculationRule" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The basis for Capacity calculation.
					Supported values are: Current (LAST_KNOWN), Trend (CAPACITY_TREND)
					Default value is Current (LAST_KNOWN)
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="LAST_KNOWN"/>
					<xs:enumeration value="CAPACITY_TREND"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="WorkloadSettingsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines how Workload is calculated.
				Workload is the immediate % of capacity consumed of the most constrained of several key resource containers.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ApplicableResourceContainer" type="describe:ApplicableResourceContainerType" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unique key of the policy (if any) that this policy inherits the settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="CapacityTimeRemainingSettingsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines how Capacity Remaining and Time Remaining are calculated.
				Capacity is a measurement of the amount of memory, CPU, and disk space for a Resource.
				Time remaining is a measure of the amount of time left before a Resource objects run out of capacity.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ApplicableResourceContainer" type="describe:ApplicableResourceContainerType" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unique key of the policy (if any) that this policy inherits the settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="capacityDetermination" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Whether capacity is based on total or usable capacity.
					Supported values: Total capacity (TOTAL), Usable capacity (USABLE).
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="TOTAL"/>
					<xs:enumeration value="USABLE"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute type="xs:double" name="provisioningTimeThreshold" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Shortens Time Remaining scores (in days) to allow time for approvals, ordering, shipping,
					configuration and deployment of resources.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="useStress" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If set to true Stress would be considered in the capacity and time remaining calculations.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="includeCommittedProjects" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If set to true all committed projects would be accounted which
					would affect time remaining scores.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="TimeSettingsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines when and how the resource usage is tracked.
				Time indicates the schedule and range of days and hours that the usage of resources is tracked,
				and the maintenance schedule selected for periodic and repeatable maintenance.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unique key of the policy (if any) that this policy inherits the settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="allHoursAndDays" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If set to true the usage is tracked at all times.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="sun" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If allHoursAndDays=false and "sun" is set to true the usage is tracked at Sundays.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="mon" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If allHoursAndDays=false and "mon" is set to true the usage is tracked at Mondays.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="tue" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If allHoursAndDays=false and "tue" is set to true the usage is tracked at Tuesdays.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="wed" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If allHoursAndDays=false and "wed" is set to true the usage is tracked at Wednesdays.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="thu" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If allHoursAndDays=false and "thu" is set to true the usage is tracked at Thursdays.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="fri" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If allHoursAndDays=false and "fri" is set to true the usage is tracked at Fridays.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="sat" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If allHoursAndDays=false and "sat" is set to true the usage is tracked at Saturdays.
					Default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="startHour" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If allHoursAndDays=false this would be the starting hour to track usage.
					Supported values: An integer number from 0 to 23
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:token">
					<xs:pattern value="[0-9]|1[0-9]|2[0-3]"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="endHour" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					If allHoursAndDays=false this would be the ending hour to track usage.
					Supported values: An integer number from 0 to 23
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:token">
					<xs:pattern value="[0-9]|1[0-9]|2[0-3]"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="dataRange" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The number of days to include in the analysis of time usage.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="ReclaimableCapacitySettingsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines how the Reclaimable Capacity is calculated.
				Reclaimable Capacity is a measurement of capacity for a container i.e. CPU, memory, and disk space designated as waste
				idle, powered off, underused and unused.
			</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="WasteSettings" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines how the Waste part of Reclaimable Capacity is calculated.
						</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="ApplicableResourceContainer" type="describe:ApplicableResourceContainerType" maxOccurs="unbounded" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The unique key of the policy (if any) that this policy inherits the settings.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="IdleSettings" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines how the Idle part of Reclaimable Capacity is calculated.
						</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="ApplicableResourceContainer" type="describe:ApplicableResourceContainerType" maxOccurs="unbounded" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The unique key of the policy (if any) that this policy inherits the settings.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:double" name="filterThreshold" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Threshold of percent to flag a container as Idle when at least this percent of time the
								resource container value is below Idle level.
								Note that the Idle level is set in ApplicableResourceContainer "threshold" attribute.
								For example if Disk IOPS is the resource container value and
								the "filterThreshold" is set to 90 and the ApplicableResourceContainer "threshold" is
								set to 1.0 IOPS, then the Resource would be considered as Idle if more than 90% of time
								the Disk Space IOPS is less than 1.0.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:string" name="logicOperator" use="optional" />
				</xs:complexType>
			</xs:element>
			<xs:element name="PoweredOffSettings" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines how the Powered Off part of Reclaimable Capacity is calculated.
						</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="ApplicableResourceContainer" type="describe:ApplicableResourceContainerType" maxOccurs="unbounded" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The unique key of the policy (if any) that this policy inherits the settings.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:double" name="filterThreshold" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Threshold of percent to flag a container as Powered Off when at least this percent of time the
								Resource is Powered Off.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="UnderusedSettings" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines how the Underused part of Reclaimable Capacity is calculated.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The unique key of the policy (if any) that this policy inherits the settings.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:double" name="recommendedSizePercentThreshold" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The threshold of percent of recommmended size compared to current size for a Resource.
								If the percentage rate of recommnded size to current size then the Resource
								is considered as Underusedor Oversized.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:double" name="underusedPercentThreshold" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Percentage of time for the resource to be considered under-used.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:string" name="logicOperator" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The logical operator used among container resources to determine if the Resource is stressed.
								Supported values: OR, AND
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="UnUsedSettings" maxOccurs="1" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Defines how the Unused part of Reclaimable Capacity is calculated.
							A Resource is considered Unused if it is older than number of days set in
							the value of ApplicableResourceContainer "threshold" attribute for a resource container.
						</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="ApplicableResourceContainer" type="describe:ApplicableResourceContainerType" maxOccurs="unbounded" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The unique key of the policy (if any) that this policy inherits the settings.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:all>
		<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unique key of the policy (if any) that this policy inherits the settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="DensitySettingsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Defines how the Density is calculated.
				The calculation uses demand analytics to determine an optimal child:parent consolidation ratio.
				Density is % alignment of your actual consolidation ratio to optimal.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ApplicableResourceContainer" type="describe:ApplicableResourceContainerType" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute type="xs:string" name="inheritPolicySettings" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The unique key of the policy (if any) that this policy inherits the settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="PackageSettingsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Includes all the customized Attributes and Alert/Symptom definitions for this OOTB Policy.
				An OOTB Policy can be assigned to a Custom Group and become an Active Policy.
				Note that there is no setttings for "Anomaly" and "Fault" except for Badge Scores.
				Each Policy can include at most one Package Settings.
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BadgeSymptoms" type="describe:BadgeSymptomsType" maxOccurs="1" minOccurs="0"/>
			<xs:element name="Symptoms" type="describe:SymptomsType" maxOccurs="1" minOccurs="0"/>
			<xs:element name="Alerts" type="describe:AlertsType" maxOccurs="1" minOccurs="0"/>
			<xs:element name="Metrics" type="describe:MetricsType" maxOccurs="1" minOccurs="0"/>
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="BadgeSymptomsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A Collection of BadgeSymptom policy package settings.
			</xs:documentation>
		</xs:annotation>
			<xs:sequence>
				<xs:element name="BadgeSymptom" maxOccurs="unbounded" minOccurs="0">
					<xs:complexType>
						<xs:annotation>
							<xs:documentation xml:lang="en">
								A BadgeSymptom defines a Badge Score Symptom Threshold.
								The thresholds and severity are used for coloring of badges and Alerting on badges.
							</xs:documentation>
						</xs:annotation>
						<xs:attribute type="xs:string" name="id" use="required" >
							<xs:annotation>
								<xs:documentation xml:lang="en">
									The unique id of the badge.
									For example "badge|workload" refers to Workload badge.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute type="xs:boolean" name="enabled" use="required" >
							<xs:annotation>
								<xs:documentation xml:lang="en">
									If set to true the badge score symption is enabled and modifyable from UI.
									Default is false.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="severity" use="required" >
							<xs:annotation>
								<xs:documentation xml:lang="en">
									The severity of the Badge Symptom.
									Supported values: info, warning, immediate and critical.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="warning"/>
									<xs:enumeration value="immediate"/>
									<xs:enumeration value="critical"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute type="xs:double" name="threshold" use="optional" >
							<xs:annotation>
								<xs:documentation xml:lang="en">
									The threshold value for each severity level.
									When the badge value crosses the threshold value (sometimes above and sometimes under),
									then the badge color would turn to match the severity level (yellow for warning,
									orange for immediate and red for critical) and a Symptom with matching severity would
									be generated.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		<xs:attribute type="xs:string" name="adapterKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The Adapter Kind key for this collection of Badge Symptoms settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="resourceKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The Resource Kind key for this collection of Badge Symptoms settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="SymptomsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A collection of Symptoms definition policy package settings for an OOTB policy.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Symptom" maxOccurs="unbounded" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							The Symptom definition policy package settings.
							Note that this element is to modify an already defined Symptom for a specific OOTB Policy.
							Modifications includes enable/disbale of Symptom or change of threshold value.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="id" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The unique id of the defined symptom definition that this Sympton policy package setting refers to.
								This is built based on the key of an exiting defined Symptom in Describe
								using the following convention:
								"SymptomDefinition-" + Adapter Kind key of the Describe + "-" + Symptom key.
								For example if Adapter Kind key is "StorageAdapter and "Symptom key is "storageHighUsage" then
								the id for a Symptom would be: "SymptomDefinition-StorageAdapter-storageHighUsage"
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:boolean" name="enabled" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								If set to true the symptom policy package settings is enabled and if set to false it is disabled.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:double" name="threshold" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The threshold value to override the original threshold value of the Symtpom.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:string" name="adapterKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The Adapter Kind key for this collection of Symptoms settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="resourceKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The Resource Kind key for this collection of Symptoms settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="AlertsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A collection of Alerts definition policy package settings for an OOTB policy.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Alert" maxOccurs="unbounded" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							The Alert definition policy package settings.
							Note that this element is to modify an already defined Alert for a specific OOTB Policy.
							Modifications only includes enable/disbale of Alert.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="id" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The unique id of the defined alert that this Alert refers to.
								This is built based on the key of an exiting defined Alert in Describe
								using the following convention:
								"AlertDefinition-" + Adapter Kind key of the Describe + "-" + Alert key.
								For example if Adapter Kind key is "StorageAdapter and "Alert key is "VolumeOnlyHighUsage" then
								the id for an Alert would be: "AlertDefinition-StorageAdapter-VolumeOnlyHighUsage"
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:boolean" name="enabled" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								If set to true the Alert is enabled and if set to false it is disabled.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:string" name="adapterKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The Adapter Kind key for this collection of Alerts settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="resourceKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The Resource Kind key for this collection of Alerts settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="MetricsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A collection of Metrics definition policy package settings for an OOTB policy.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Metric" maxOccurs="unbounded" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation xml:lang="en">
							The Metric definition policy package settings.
							Note that this element is to modify an already defined Metric (ResourceAttribute)
							for a specific OOTB Policy.
							Modifications only includes enable/disable the Metric.
							If enabled, data is collected for the Metric and if disabled,
							no data would be collected for the Metric.
						</xs:documentation>
					</xs:annotation>
					<xs:attribute type="xs:string" name="id" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The unique id of the defined metric (ResourceAttribute) that this Metric refers to.
								This is built using the "|" as delimiter between ResourceGroup key and ResourceAttribute key.
								For example if the ResourceGroup key is "Volume" and the ResourceAttribute key is "RawGB"
								then the Metric id would be "Volume|RawGB"
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:boolean" name="enabled" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								If set to true the data would be collected for this Metric and if set to false
								no data would be collected for this Metric.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:string" name="adapterKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The Adapter Kind key for this collection of Metric settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="resourceKind" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The Resource Kind key for this collection of Metric settings.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="UnitDefinitionsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				A Collection of UnitType elements.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UnitType" type="describe:UnitTypeType" maxOccurs="unbounded" minOccurs="1"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="UnitTypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Each UnitType defines a new type of unit of measurement.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Unit" type="describe:UnitType" maxOccurs="unbounded" minOccurs="1"/>
		</xs:sequence>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unit type key. A unique string that identifies the type of unit of measurement.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="UnitType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Each Unit defines a new unit of measurement.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="key" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Unit key. A unique string that identifies the unit of measurement.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="nameKey" use="optional" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Localized name id for the unit of measurement. This number refers to one or more
					Name entries with matching key attribute in Names sequence defined in the templates describe.
					Localized names can be externalized to resources property file.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="order" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the order of the unit of measurement relative to the other units in the same type.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:integer" name="conversionFactor" use="required" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines the factor to convert the unit of measurement from the unit of lower order in the same type.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

</xs:schema>
