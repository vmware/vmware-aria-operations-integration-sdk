openapi: 3.0.0
info:
  title: Adapter API
  description: The API contract is defined using a standard OpenAPI specification
    to simplify adapter development.
  contact: {}
  version: 1.0.0
servers:
- url: http://localhost:8080
paths:
  /apiVersion:
    get:
      summary: API Version
      description: Get API Version
      operationId: api_version
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
      x-openapi-router-controller: swagger_server.controllers.controller
  /test:
    post:
      summary: Connection Test
      description: Trigger a connection test
      operationId: test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdapterConfig'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult'
        "400":
          description: Bad Request
      x-openapi-router-controller: swagger_server.controllers.controller
  /collect:
    post:
      summary: Data Collection
      description: Do data collection
      operationId: collect
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdapterConfig'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectResult'
      x-openapi-router-controller: swagger_server.controllers.controller
  /endpointURLs:
    post:
      summary: Retrieve endpoint URLs
      description: This should return a list of properly formed endpoint URL(s) (https://ip
        address) this adapter instance is expected to communicate with. List of URLs
        will be used for taking advantage of the vRealize Operations Manager certificate
        trust system. If the list is empty this means adapter will handle certificates
        manually.
      operationId: get_endpoint_urls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdapterConfig'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResults'
      x-openapi-router-controller: swagger_server.controllers.controller
components:
  schemas:
    ObjectKey:
      title: ObjectKey
      required:
      - adapterKind
      - name
      - objectKind
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the object this key represents
        adapterKind:
          minLength: 1
          type: string
          description: Adapter kind key this key represents.
        objectKind:
          minLength: 1
          type: string
          description: The object kind key this key represents.
        identifiers:
          type: array
          description: Collection of identifiers for this key. Identifiers are case
            insensitive. No two identifiers with the same key can exist for the same
            resource.
          items:
            $ref: '#/components/schemas/Identifier'
      description: "Represents a key to uniquely identify a object in the system.\
        \ A key's\nuniqueness depends on its object kind, adapter kind, and either\
        \ the\nobject name or additional \"uniqueness\" identifiers.\n\nSee {Identifier}\
        \ for information about object identifiers.\n\nA object key includes the object\
        \ name as part of the key's uniqueness if\nit has no identifiers marked as\
        \ part of uniqueness; otherwise, it includes\nthe identifiers marked as part\
        \ of uniqueness instead of the object name.\n\nAll components used to determine\
        \ uniqueness are compared in a case-insensitive way.\n\nThe following shows\
        \ how to add two objects, by objectKey, to a discovery\nresult.  The first\
        \ is created with no identifiers.  The second is created\nwith two identifiers,\
        \ one of which plays a part in uniquely identifying the\nobject and the other\
        \ which is for informational purposes only."
      example:
        objectKind: objectKind
        adapterKind: adapterKind
        identifiers:
        - isPartOfUniqueness: false
          value: value
          key: key
        - isPartOfUniqueness: false
          value: value
          key: key
        name: name
    Identifier:
      title: Identifier
      required:
      - key
      type: object
      properties:
        key:
          minLength: 1
          type: string
          description: "Key for the object identifier. For a object kind, identifier\
            \ keys are unique. In describe.xml file, the attribute \"key\" corresponds\
            \ to this field. This is a case-insensitive field and can not be empty."
        value:
          type: string
          description: Value of the object identifier. This is a case-insensitive
            field
        isPartOfUniqueness:
          type: boolean
          description: "Flag to indicate whether the identifier should be considered\
            \ for object's uniqueness. If a object has multiple identifiers that are\
            \ part of uniqueness, there can be only one combination of values of those\
            \ identifiers in vRealize Operations."
          default: false
      description: "Stores the adapter object's identifier configuration.\nAn identifier\
        \ can either be an active identifier or an informational identifier.\nAll\
        \ active identifiers have the flag \"isPartOfUniqueness\" set to true, \n\
        while all informational identifiers have this flag set to false. In the product,\n\
        there cannot be more than one object with the same values for all active identifiers.\n\
        This class contains all information about the object identifier."
      example:
        isPartOfUniqueness: false
        value: value
        key: key
    ObjectData:
      title: ObjectData
      required:
      - key
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ObjectKey'
        metrics:
          type: array
          description: Collection of metrics.
          items:
            $ref: '#/components/schemas/MetricData'
        properties:
          type: array
          description: Collection of properties.
          items:
            $ref: '#/components/schemas/PropertyData'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      description: Stores object configuration information. Collection of metrics/properties
        for the object and the object key for current object.
      example:
        metrics:
        - numberValue: 0.8008281904610115
          key: key
          timestamp: 6
        - numberValue: 0.8008281904610115
          key: key
          timestamp: 6
        key:
          objectKind: objectKind
          adapterKind: adapterKind
          identifiers:
          - isPartOfUniqueness: false
            value: value
            key: key
          - isPartOfUniqueness: false
            value: value
            key: key
          name: name
        properties:
        - stringValue: stringValue
          numberValue: 1.4658129805029452
          key: key
          timestamp: 5
        - stringValue: stringValue
          numberValue: 1.4658129805029452
          key: key
          timestamp: 5
        events:
        - cancelWaitCycle: 2
          updateDate: 7
          cancelDate: 9
          watchWaitCycle: 3
          criticality: 2
          message: message
          autoCancel: false
          faultKey: faultKey
          startDate: 2
        - cancelWaitCycle: 2
          updateDate: 7
          cancelDate: 9
          watchWaitCycle: 3
          criticality: 2
          message: message
          autoCancel: false
          faultKey: faultKey
          startDate: 2
    MetricData:
      title: MetricData
      required:
      - key
      type: object
      properties:
        key:
          type: string
          description: "Key represents a hierarchical structure for an individual\n\
            metric. The formation of the metric key is an important part of designing\
            \ a\ndata feed. Well-formed metric keys will lead to better usability,\
            \ performance\nand visualization of analytics results, such as root cause\
            \ analysis.\n\nThe base concepts are as follows:<br>\nA metric key can\
            \ consist of any number of hierarchical groups. Each hierarchical group\
            \ can contain\ninstances. The last item in the hierarchy is assumed to\
            \ be the name of the\nmetric. The hierarchy without instance names represents\
            \ an attribute that can\nbe collected. If there are no instances, then\
            \ a metric key and an attribute are one and the same."
        numberValue:
          type: number
          description: Current double value.
          format: double
        timestamp:
          type: integer
          description: Timestamp of the data.
          format: int64
          default: -1
      description: "Represents a single data for a given metric, where an data is\
        \ a time-stamp and a value;"
      example:
        numberValue: 0.8008281904610115
        key: key
        timestamp: 6
    PropertyData:
      title: PropertyData
      required:
      - key
      type: object
      properties:
        key:
          type: string
          description: "Key represents a hierarchical structure for an individual\n\
            metric. The formation of the metric key is an important part of designing\
            \ a\ndata feed. Well-formed metric keys will lead to better usability,\
            \ performance\nand visualization of analytics results, such as root cause\
            \ analysis.\n\nThe base concepts are as follows:<br>\nA metric key can\
            \ consist of any number of hierarchical groups. Each hierarchical group\
            \ can contain\ninstances. The last item in the hierarchy is assumed to\
            \ be the name of the\nmetric. The hierarchy without instance names represents\
            \ an attribute that can\nbe collected. If there are no instances, then\
            \ a metric key and an attribute are one and the same."
        stringValue:
          type: string
          description: Current string value
        numberValue:
          type: number
          description: Current double value.
          format: double
        timestamp:
          type: integer
          description: Timestamp of the data.
          format: int64
          default: -1
      description: "Represents a single data for a given property, where the value\
        \ can be numeric or string type."
      example:
        stringValue: stringValue
        numberValue: 1.4658129805029452
        key: key
        timestamp: 5
    CollectResult:
      title: CollectResult
      type: object
      properties:
        result:
          type: array
          description: Collection of collected objects with metrics and properties.
          items:
            $ref: '#/components/schemas/ObjectData'
        relationships:
          type: array
          description: Collection of objects relationships with parent to children
            structure.
          items:
            $ref: '#/components/schemas/ObjectRelationship'
        notExistingObjects:
          type: array
          description: Collection of not exisitng objects.
          items:
            $ref: '#/components/schemas/ObjectKey'
        errorMessage:
          type: string
      description: Result of the collection process. Every collect result has object
        data collection with metrics/properties and the relationship of all objects.
      example:
        result:
        - metrics:
          - numberValue: 0.8008281904610115
            key: key
            timestamp: 6
          - numberValue: 0.8008281904610115
            key: key
            timestamp: 6
          key:
            objectKind: objectKind
            adapterKind: adapterKind
            identifiers:
            - isPartOfUniqueness: false
              value: value
              key: key
            - isPartOfUniqueness: false
              value: value
              key: key
            name: name
          properties:
          - stringValue: stringValue
            numberValue: 1.4658129805029452
            key: key
            timestamp: 5
          - stringValue: stringValue
            numberValue: 1.4658129805029452
            key: key
            timestamp: 5
          events:
          - cancelWaitCycle: 2
            updateDate: 7
            cancelDate: 9
            watchWaitCycle: 3
            criticality: 2
            message: message
            autoCancel: false
            faultKey: faultKey
            startDate: 2
          - cancelWaitCycle: 2
            updateDate: 7
            cancelDate: 9
            watchWaitCycle: 3
            criticality: 2
            message: message
            autoCancel: false
            faultKey: faultKey
            startDate: 2
        - metrics:
          - numberValue: 0.8008281904610115
            key: key
            timestamp: 6
          - numberValue: 0.8008281904610115
            key: key
            timestamp: 6
          key:
            objectKind: objectKind
            adapterKind: adapterKind
            identifiers:
            - isPartOfUniqueness: false
              value: value
              key: key
            - isPartOfUniqueness: false
              value: value
              key: key
            name: name
          properties:
          - stringValue: stringValue
            numberValue: 1.4658129805029452
            key: key
            timestamp: 5
          - stringValue: stringValue
            numberValue: 1.4658129805029452
            key: key
            timestamp: 5
          events:
          - cancelWaitCycle: 2
            updateDate: 7
            cancelDate: 9
            watchWaitCycle: 3
            criticality: 2
            message: message
            autoCancel: false
            faultKey: faultKey
            startDate: 2
          - cancelWaitCycle: 2
            updateDate: 7
            cancelDate: 9
            watchWaitCycle: 3
            criticality: 2
            message: message
            autoCancel: false
            faultKey: faultKey
            startDate: 2
        relationships:
        - add: true
          parent: null
          children:
          - null
          - null
          clearFirst: true
        - add: true
          parent: null
          children:
          - null
          - null
          clearFirst: true
        notExistingObjects:
        - null
        - null
        errorMessage: errorMessage
    ObjectRelationship:
      title: ObjectRelationship
      required:
      - parent
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/ObjectKey'
        children:
          type: array
          description: Collection of children for the current parent.
          items:
            $ref: '#/components/schemas/ObjectKey'
        add:
          type: boolean
          description: "If the value is true, then this relationship will be added\
            \ to vRealize Operations Manager, if false, this relationship will be\
            \ removed from vRealize Operations Manager."
          default: true
        clearFirst:
          type: boolean
          description: If the value is true all children will be removed from the
            parent before adding this list.
          default: true
      description: Represents a single parent to many children relationship.
      example:
        add: true
        parent: null
        children:
        - null
        - null
        clearFirst: true
    TestResult:
      title: TestResult
      type: object
      properties:
        errorMessage:
          type: string
          description: Contains the error message if the test connection failed.
      description: Represents the configuration validation result. Result contains
        error message if validation is failed.
      example:
        errorMessage: errorMessage
    AdapterConfig:
      title: AdapterConfig
      minProperties: 0
      required:
      - adapterKey
      type: object
      properties:
        adapterKey:
          $ref: '#/components/schemas/ObjectKey'
        credentialConfig:
          $ref: '#/components/schemas/CredentialConfig'
        clusterConnectionInfo:
          $ref: '#/components/schemas/ClusterConnectionInfo'
        certificateConfig:
          $ref: '#/components/schemas/CertificateConfig'
      description: "Is designed for transferring adapter instance configuration from\
        \ the Collector to\nAdapter, containing all necessary information about connection\
        \ parameters, credentials."
    CredentialConfig:
      title: CredentialConfig
      required:
      - credentialFields
      - credentialKey
      type: object
      properties:
        credentialKey:
          minLength: 1
          type: string
          description: "Credential configuration key. In describe.xml file, the \"\
            key\" attribute corresponds to this field."
        credentialFields:
          minItems: 1
          type: array
          description: "List of all credential field configurations. In describe.xml,\
            \ the element \"CredentialField\" inside \"CredentialKind\" corresponds\
            \ to individual elements in this list."
          items:
            $ref: '#/components/schemas/CredentialField'
      description: "Represents the adapter's configured credential object. \nContains\
        \ all information about the credentials entered when the adapter instance\
        \ is created."
    CredentialField:
      title: CredentialField
      required:
      - key
      type: object
      properties:
        key:
          minLength: 1
          type: string
          description: "Credential field key. In describe.xml file, the \"key\" attribute\
            \ corresponds to this field."
        value:
          type: string
          description: Value of the credential field. This field is populated  on
            adapter instance creation.
          format: password
        isPassword:
          type: boolean
          description: Flag to indicate whether this is a password field.
          default: false
      description: |-
        Represents adapter's credential configuration field.
        This class contains all information about the credential's field entered when the adapter instance is created.
    ClusterConnectionInfo:
      title: ClusterConnectionInfo
      required:
      - hostName
      - userName
      type: object
      properties:
        userName:
          minLength: 1
          type: string
          description: Represents the user name in the credential.
        password:
          type: string
          description: Represents the password in the credential.
          format: password
        hostName:
          type: string
          description: Host name for connection to vROps Cluster
      description: Represents the connection info to be used by adapter to communicate
        with vROps Suite API.
    Certificate:
      title: Certificate
      required:
      - certPemString
      type: object
      properties:
        certPemString:
          type: string
        isInvalidHostnameAccepted:
          type: boolean
          description: "In case if the hostname verification fails and isInvalidHostnameAccepted\
            \ is true \nAdapter should do the verification by comparing the certificates\
            \ from the endpoints with the certificates received from the Collector.\
            \ \nFor example the comparison can be done by thumbprint."
          default: false
        isExpiredCertificateAccepted:
          type: boolean
          description: In case if the connection fails because of certificate expiration
            and isExpiredCertificateAccepted is true then the Adapter should ignore
            that failure and continue the connection.
          default: false
      description: Represents the adapter's trusted certificate object. This class
        contains all information about the certificates trusted by user from UI when
        the adapter instance is created.
    CertificateConfig:
      title: CertificateConfig
      type: object
      properties:
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
      description: Represents the adapter's trusted certificates.
    Event:
      title: Event
      required:
      - message
      type: object
      properties:
        criticality:
          maximum: 5
          minimum: 0
          type: integer
          format: int32
          default: 0
        message:
          type: string
        faultKey:
          type: string
        autoCancel:
          type: boolean
          default: false
        startDate:
          type: integer
          format: int64
        updateDate:
          type: integer
          format: int64
        cancelDate:
          type: integer
          format: int64
        watchWaitCycle:
          type: integer
          format: int32
          default: 1
        cancelWaitCycle:
          type: integer
          format: int32
          default: 3
      example:
        cancelWaitCycle: 2
        updateDate: 7
        cancelDate: 9
        watchWaitCycle: 3
        criticality: 2
        message: message
        autoCancel: false
        faultKey: faultKey
        startDate: 2
    ApiVersion:
      title: ApiVersion
      required:
      - maintenance
      - major
      - minor
      type: object
      properties:
        major:
          maximum: 1
          minimum: 1
          exclusiveMinimum: false
          type: integer
          readOnly: true
          default: 1
        minor:
          maximum: 0
          minimum: 0
          type: integer
          readOnly: true
          default: 0
        maintenance:
          maximum: 0
          minimum: 0
          type: integer
          readOnly: true
          default: 0
      description: API Version
      example:
        major: 1
        minor: 0
        maintenance: 0
    EndpointResults:
      title: EndpointResults
      type: object
      properties:
        endpointUrls:
          type: array
          description: Collection of endpoint URLs
          items:
            type: string
      description: Endpoint URLs collection
      example:
        endpointUrls:
        - endpointUrls
        - endpointUrls
  securitySchemes: {}
  links: {}
  callbacks: {}

