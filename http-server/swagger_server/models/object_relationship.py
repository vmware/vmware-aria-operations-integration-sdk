# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.object_key import ObjectKey  # noqa: F401,E501
from swagger_server import util


class ObjectRelationship(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, parent: ObjectKey=None, children: List[ObjectKey]=None):  # noqa: E501
        """ObjectRelationship - a model defined in Swagger

        :param parent: The parent of this ObjectRelationship.  # noqa: E501
        :type parent: ObjectKey
        :param children: The children of this ObjectRelationship.  # noqa: E501
        :type children: List[ObjectKey]
        """
        self.swagger_types = {
            'parent': ObjectKey,
            'children': List[ObjectKey]
        }

        self.attribute_map = {
            'parent': 'parent',
            'children': 'children'
        }
        self._parent = parent
        self._children = children

    @classmethod
    def from_dict(cls, dikt) -> 'ObjectRelationship':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ObjectRelationship of this ObjectRelationship.  # noqa: E501
        :rtype: ObjectRelationship
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parent(self) -> ObjectKey:
        """Gets the parent of this ObjectRelationship.


        :return: The parent of this ObjectRelationship.
        :rtype: ObjectKey
        """
        return self._parent

    @parent.setter
    def parent(self, parent: ObjectKey):
        """Sets the parent of this ObjectRelationship.


        :param parent: The parent of this ObjectRelationship.
        :type parent: ObjectKey
        """
        if parent is None:
            raise ValueError("Invalid value for `parent`, must not be `None`")  # noqa: E501

        self._parent = parent

    @property
    def children(self) -> List[ObjectKey]:
        """Gets the children of this ObjectRelationship.

        Collection of children for the current parent.  # noqa: E501

        :return: The children of this ObjectRelationship.
        :rtype: List[ObjectKey]
        """
        return self._children

    @children.setter
    def children(self, children: List[ObjectKey]):
        """Sets the children of this ObjectRelationship.

        Collection of children for the current parent.  # noqa: E501

        :param children: The children of this ObjectRelationship.
        :type children: List[ObjectKey]
        """

        self._children = children
