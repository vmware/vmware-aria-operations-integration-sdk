# coding: utf-8

#  Copyright 2022 VMware, Inc.
#  SPDX-License-Identifier: Apache-2.0

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Identifier(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, key: str=None, value: str=None, is_part_of_uniqueness: bool=False):  # noqa: E501
        """Identifier - a model defined in Swagger

        :param key: The key of this Identifier.  # noqa: E501
        :type key: str
        :param value: The value of this Identifier.  # noqa: E501
        :type value: str
        :param is_part_of_uniqueness: The is_part_of_uniqueness of this Identifier.  # noqa: E501
        :type is_part_of_uniqueness: bool
        """
        self.swagger_types = {
            'key': str,
            'value': str,
            'is_part_of_uniqueness': bool
        }

        self.attribute_map = {
            'key': 'key',
            'value': 'value',
            'is_part_of_uniqueness': 'isPartOfUniqueness'
        }
        self._key = key
        self._value = value
        self._is_part_of_uniqueness = is_part_of_uniqueness

    @classmethod
    def from_dict(cls, dikt) -> 'Identifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Identifier of this Identifier.  # noqa: E501
        :rtype: Identifier
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self) -> str:
        """Gets the key of this Identifier.

        Key for the object identifier. For a object kind, identifier keys are unique. In describe.xml file, the attribute \"key\" corresponds to this field. This is a case-insensitive field and can not be empty.  # noqa: E501

        :return: The key of this Identifier.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key: str):
        """Sets the key of this Identifier.

        Key for the object identifier. For a object kind, identifier keys are unique. In describe.xml file, the attribute \"key\" corresponds to this field. This is a case-insensitive field and can not be empty.  # noqa: E501

        :param key: The key of this Identifier.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")  # noqa: E501

        self._key = key

    @property
    def value(self) -> str:
        """Gets the value of this Identifier.

        Value of the object identifier. This is a case-insensitive field  # noqa: E501

        :return: The value of this Identifier.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this Identifier.

        Value of the object identifier. This is a case-insensitive field  # noqa: E501

        :param value: The value of this Identifier.
        :type value: str
        """

        self._value = value

    @property
    def is_part_of_uniqueness(self) -> bool:
        """Gets the is_part_of_uniqueness of this Identifier.

        Flag to indicate whether the identifier should be considered for object's uniqueness. If a object has multiple identifiers that are part of uniqueness, there can be only one combination of values of those identifiers in vRealize Operations.  # noqa: E501

        :return: The is_part_of_uniqueness of this Identifier.
        :rtype: bool
        """
        return self._is_part_of_uniqueness

    @is_part_of_uniqueness.setter
    def is_part_of_uniqueness(self, is_part_of_uniqueness: bool):
        """Sets the is_part_of_uniqueness of this Identifier.

        Flag to indicate whether the identifier should be considered for object's uniqueness. If a object has multiple identifiers that are part of uniqueness, there can be only one combination of values of those identifiers in vRealize Operations.  # noqa: E501

        :param is_part_of_uniqueness: The is_part_of_uniqueness of this Identifier.
        :type is_part_of_uniqueness: bool
        """

        self._is_part_of_uniqueness = is_part_of_uniqueness
